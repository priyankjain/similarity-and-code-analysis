diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-saul97/css/tutorial.css b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-saul97/css/tutorial.css
index 2617a84..d71352c 100644
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-saul97/css/tutorial.css
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-saul97/css/tutorial.css
@@ -9,11 +9,8 @@ padding: 0;
 	padding: 0px;
 }
 #map{
-	margin-top: 10px;
-	position: absolute;
-    height: 90%;
-    padding: 2px;
-    display: block;
+	width:50%;
+	height:400px;
 }
 
 #chart{
@@ -25,3 +22,10 @@ padding: 0;
 	float: right;
 	height: 90%;
 }
+
+#weather{
+       font-size:30px;
+       color:red;
+
+
+}	
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-saul97/hack.html b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-saul97/hack.html
deleted file mode 100644
index 5e6f5d2..0000000
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-saul97/hack.html
+++ /dev/null
@@ -1,96 +0,0 @@
-<!DOCTYPE html>
-<html>
-  <head>
-  <title>Purdue Ironhacks Tutorial Project</title>
-  <style>
-     #map {
-       width :50%;
-       height :400px;
-       background-color: grey;
-     }
-     #weather {
-      
-       position: relative;
-       left:800px;
-       top: -50px;
-       width:50%;
-       height:400px;
-       background-color: grey;
-     }
-  </style>
-  
- </head>
-  <body>
-    <h3>Purdue Ironhacks Tutorial Project</h3>
-    
-  
-    <div id="map"></div>
-    <div id="weather"></div>
-    <div id="marker"></div>
-    <div id="info"></div>
-    <script type = "text/javascript">
-	 function initMap() {
-         var mapDiv = document.getElementById('map');
-	 var target = {lat:40.4167, lng:-86.8753};
-	 var map = new google.maps.Map(mapDiv, {
-		        center: target,
-			zoom:12});
-	
-
-	 var contentString = '<div id="content">' +
-		 '<div id="siteNotice">' +
-		 '</div>' +
-		 '<h1 id="firstHeading" class="firstHeading">Lafayette Area</h1>'+
-		 '<div id="bodyContent">'+
-		 '<p><b>This is Lafayette area</p>'
-		 '</div>'+
-		 '</div>';
-	 var infowindow = new google.maps.InfoWindow({
-			 content: contentString
-			 });
-	 var marker = new google.maps.Marker({
-			 position: target,
-			 map:map,
-			 titile:'Chicago'
-	 });
-	 marker.addListener('click',function() {
-			
-			 infowindow.open(map,marker);
-			 });
-
-	 }
-
-     function getData() {
-         var theUrl = "http://www.ncdc.noaa.gov/cdo-web/api/v2/datacategories/DD";
-	 var theToken = "SAVsgmJIqPnXmRXQndKXsKeHbHQjBnwu";
-         //curl -H theToken theUrl;
-	 $.ajax({
-           url: theUrl,
-	   data: {data},
-           headers: {token:theToken},
-	   success: function(data) {
-               var response = data;
-	       alert(data);
-	       document.getElementById("weather").innerHTML = response;
-	   }	   
-	   });
-	 
-	 }   
-            
-	    
-	     	   
-	 
-	 
-       
-	 
-	 
-	    
-       
- </script>
-     <script async defer 
-         src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCC4lO1PjOC9xzRaOK86FJoht6VBFYcsB8&callback=initMap">
-    </script>
-  </body>
-
-  </html>
-
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-saul97/main.html b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-saul97/main.html
new file mode 100644
index 0000000..a76265f
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-saul97/main.html
@@ -0,0 +1,62 @@
+<html>
+  <head>
+	<meta charset="UTF-8">
+	<meta name="description" content="Virus Map">
+	<meta name="author" content="Saul Yin">
+	<title>2016 Purdue Ironhacks Tutorial Project</title>
+		<!-- Latest compiled and minified CSS -->
+	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
+
+	<!-- Optional theme -->
+	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">
+
+	<!-- Latest compiled and minified JavaScript -->
+	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
+	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
+	<link rel="stylesheet" href="css/tutorial.css" type="text/css"/>
+	<script src="https://code.jquery.com/jquery-1.9.1.js" type="text/javascript"></script>
+	<script src="https://d3js.org/d3.v3.min.js"></script>
+        <script src="js/RadarChart.js"></script>
+	<script src="js/mostWork.js" type="text/javascript"></script>
+	<script src="js/overView.js" type="text/javascript" ></script>
+
+
+
+  </head>
+  <body>
+  	<div class="container">
+  	<div class="container-fluid">
+  		<div class="row">
+  			<div id="col-md-12">
+  				<h3>Is there any safe place?</h3>
+  			</div>
+  		</div>
+  		<div class="row">			
+			<div id="side-menu" class="col-md-5 jumbotron" >
+				<div id="menu-cover">
+					<div id="basic-info">
+						<div id="weather"></div>
+					</div>
+					<div id="position-info">
+						<div id="city-name"></div>
+						<div id="DeadAll"></div>
+						<div id="DeathYouth"></div>
+						
+					</div>
+					<div id="chart">
+					</div>
+					<div id="scores"></div>
+				</div>
+			</div>
+			<div class="col-md-6" id="map">
+			</div>
+			<div class="col-md-1"></div>
+		</div>
+	</div>
+	</div>	
+
+	<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDBEU6UNXf5emWuCqXIP2RJBr8X3mQ43us&callback=initMap"></script>
+
+  </body>
+</html>
+
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-saul97/mostWork.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-saul97/mostWork.js
new file mode 100644
index 0000000..3eb088d
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-saul97/mostWork.js
@@ -0,0 +1,187 @@
+var elevator;
+var map;
+var washedData = [];
+
+String.prototype.capitalizeFirstLetter = function(){
+    return this.charAt(0).toUpperCase() + this.slice(1);
+}
+
+function initMap() {
+    map = new google.maps.Map(document.getElementById('map'), {
+        center: {lat: 37.0902, lng: -95.7192},
+	zoom : 4
+    });
+
+    var infowindow = new google.maps.InfoWindow({
+       content : ""
+    });
+
+    var xmlhttp = new XMLHttpRequest();
+    var url = "https://data.cdc.gov/api/views/rpjd-ejph/rows.json?accessType=DOWNLOAD";
+    xmlhttp.open("GET",url,true);
+    xmlhttp.send();
+
+    xmlhttp.onreadystatechange = function() {
+       if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
+         var myArr = xmlhttp.responseText;
+	 var text = myArr;
+	 json = JSON.parse(text);
+	 //alert(json.data[10][11]);
+	 //document.getElementById("id01").innerHTML = myArr;
+       
+       for (var i = 10; i<50; i++) {
+                var dataLine = [];
+                //latitude - 0
+                dataLine.push(json.data[i][25][1]);
+                //longitude - 1
+                dataLine.push(json.data[i][25][2]);
+                //name - 2
+                dataLine.push(json.data[i][8]);
+                //DeadAll - 3
+                dataLine.push(json.data[i][11]);
+                //DeadYoung - 4
+		dataLine.push(json.data[i][17]);
+                washedData.push(dataLine);
+            };
+            //alert(washedData);
+	    var numberOfCities = washedData.length;
+
+	    var markers = [];
+	    google.maps.event.addListener(map,'idle',function() {
+                elevator = new google.maps.ElevationService();
+		$.each(markers,function(key,value) {
+                   value.setMap(null);
+		});
+
+	    var boundBox = map.getBounds();
+	    var southWest = boundBox.getSouthWest();
+	    var northEast = boundBox.getNorthEast();
+	    var lngSpan = northEast.lng() - southWest.lng();
+	    var latSpan = northEast.lat() - southWest.lat();
+
+	    var locations = [];
+	    for (var j = 0;j < numberOfCities;j++) {
+               var location = new google.maps.LatLng(
+		       southWest.lat() + latSpan * Math.random(),
+		       southWest.lng() + lngSpan * Math.random()
+		       );
+	       locations.push(location);
+	    }
+
+	    var positionalRequest = {
+	       'locations':locations
+	    };
+            
+	    elevator.getElevationForLocations(positionalRequest, function(results,status) {
+	        if (status === google.maps.ElevationStatus.OK) {
+                   var prev_infowindow = false;
+
+	           $.each(results,function(key,value) {
+	              //alert(key);
+		      markers[key] = new google.maps.Marker({
+		          position:{lat:Number(washedData[key][0]),lng:Number(washedData[key][1])},
+			  map : map
+		      });
+			  google.maps.event.addListener(markers[key],'click',function(){
+			     if (prev_infowindow) {
+			        prev_infowindow.close();
+			     }
+			     infowindow.setContent(washedData[key][2]);
+			     infowindow.open(map,markers[key]);
+			     document.getElementById("city-name").innerHTML = "<b>City Name</b>:" + washedData[key][2] + "</em>";
+			     var deadAll = washedData[key][3];
+			     if (deadAll == null) {
+                               deadAll = "No Data Provided";
+			     }
+			     document.getElementById("DeadAll").innerHTML = "<b>Death toll all causes all age all year</b>: <em>" + deadAll + "</em>";
+			     var deadYouth = washedData[key][4];
+			      if (deadYouth == null) {
+                               deadYouth = "No Data Provided";
+			     }
+			     document.getElementById("DeathYouth").innerHTML = "<b>Death toll all causes age 25-44 all year</b>: <em>" + deadYouth + "</em>";
+                             var w = 200,
+                            h = 250;
+                            var array  = [];
+                            for (var i = 0; i<9; i++) {
+                                array[i] = Math.random();
+                            }
+                            var d = [
+                                [
+                                    {axis:"Open hours",value:array[0]},
+                                    {axis:"Availability",value:array[1]},
+                                    {axis:"Freshness",value:array[2]},
+                                    {axis:"Distance",value:array[3]},
+                                    {axis:"Prices",value:array[4]},
+                                    {axis:"Customer ratings",value:array[5]},
+                                    {axis:"Personal preference",value:array[6]},
+                                    {axis:"Other",value:array[7]},
+                                    {axis:"service",value:array[8]}
+                                ]
+                            ];
+
+                            //document.getElementById("scores").innerHTML = "The final score for this market is <b><em>" + parseInt(score(array)*100) + "</b></em> out of <b><em>100</b></em>";   
+
+			   var mycfg = {
+			      w:w,
+			      h:h,
+			      maxValue:0.6,
+			      levels:6,
+			      ExtraWidthX:200
+			   }
+			  //Call function to draw the Radar chart
+			  //Will expect that data is in %'s 
+			  // RadarChart.draw("#chart",d,mycfg);
+			     });
+			  });
+		      }
+	           });
+	        });
+	    
+	    
+	    }
+	    };
+    
+}
+//show the request function in the text format
+function myRequestFunction(arr) {
+        var out = "";
+        var i;
+        for(i = 0; i < arr.length; i++) {
+            out += '<a href="' + arr[i].url + '">' + 
+            arr[i].display + '</a><br>';
+        }
+        document.getElementById("id01").innerHTML = out;
+    }
+// Add a listener for idle event and call getElevation on a random set of marker in the bound
+
+//get the result of whether contains a substring
+function contain(str, substr) {
+    if(str.indexOf(substr) > -1)
+        return "open";
+    else
+        return "closed";
+}
+
+//get the day in a week by the number
+function day() {
+    var d = new Date();
+    var weekday = new Array(7);
+    weekday[0]=  "Sunday";
+    weekday[1] = "Monday";
+    weekday[2] = "Tuesday";
+    weekday[3] = "Wednesday";
+    weekday[4] = "Thursday";
+    weekday[5] = "Friday";
+    weekday[6] = "Saturday";
+
+    return weekday[d.getDay()];
+}
+
+//the algorithm for scoring
+//you should create your own reasonable methods for calculating scores
+function score(data) {
+    return data[0]*0.1 + data[2]*0.01 + data[3]*0.11 + data[1]*0.1 + data[4]*0.2 + data[5]*0.1 + data[6]*0.2 + data[7]*0.01 + data[8]*0.01;
+}
+
+
+
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-saul97/overView.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-saul97/overView.js
new file mode 100644
index 0000000..29f168f
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-saul97/overView.js
@@ -0,0 +1,93 @@
+//create a new httprequest for this session
+var xmlhttp = new XMLHttpRequest();
+//json format data resource url 
+var url = "http://api.openweathermap.org/data/2.5/weather?q=chicago&appid=6aa0bdb1f586c5630d60b6237dfce45c";
+xmlhttp.open("GET", url, true);
+xmlhttp.send();
+
+//once the request is accepted, process the fowllowing function to get data and complete the app information
+xmlhttp.onreadystatechange = function() {
+    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
+        var myArr = xmlhttp.responseText;
+        var text = myArr;
+        var json = JSON.parse(text);
+        //alert(JSON.parse(text).coord.lon);
+        //document.getElementById("id01").innerHTML = myArr;
+    
+        document.getElementById("weather").innerHTML = "Today the weather is <em><b>" + json.weather[0].main + "</b></em>";
+		//
+		//variables for the title
+		//
+
+		//initiate the title
+		var svg = d3.select('#body')
+			.selectAll('svg')
+			.append('svg')
+			.attr("width", cfg.w+300)
+			.attr("height", cfg.h)
+
+
+		//variables for creating colour squares
+		var colorscale = d3.scale.category10();
+
+		//titles
+		var titleOptions = ['Final Scores'];
+		var text = svg.append("text")
+			.attr("class", "title")
+			.attr('transform', 'translate(90,0)') 
+			.attr("x", cfg.w-70)
+			.attr("y", 10)
+			.attr("font-size", "12px")
+			.attr("fill", "#404040")
+			.text("Find your best place to get food!");
+				
+		//Initiate title	
+		var title = svg.append("g")
+			.attr("class", "title")
+			.attr("height", 100)
+			.attr("width", 200)
+			.attr('transform', 'translate(90,20)') 
+			;
+			//Create colour squares
+			title.selectAll('rect')
+			  .data(titleOptions)
+			  .enter()
+			  .append("rect")
+			  .attr("x", cfg.w - 65)
+			  .attr("y", function(d, i){ return i * 20;})
+			  .attr("width", 10)
+			  .attr("height", 10)
+			  .style("fill", function(d, i){ return colorscale(i);})
+			  ;
+			//Create text next to squares
+			title.selectAll('text')
+			  .data(titleOptions)
+			  .enter()
+			  .append("text")
+			  .attr("x", cfg.w - 52)
+			  .attr("y", function(d, i){ return i * 20 + 9;})
+			  .attr("font-size", "13px")
+			  .attr("fill", "#737373")
+			  .text(function(d) { return d; })
+			  ;	
+
+		// those are functions for calculating scores for each store
+
+
+    }
+};
+
+//show the request function in the text format
+function myRequestFunction(arr) {
+    var out = "";
+    var i;
+    for(i = 0; i < arr.length; i++) {
+        out += '<a href="' + arr[i].url + '">' + 
+        arr[i].display + '</a><br>';
+    }
+    document.getElementById("id01").innerHTML = out;
+}
+
+
+
+
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-saul97/script.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-saul97/script.js
deleted file mode 100644
index aaec0fa..0000000
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-saul97/script.js
+++ /dev/null
@@ -1,99 +0,0 @@
-/**
-2015-09-07 by Charles Song
-This is the javascript file for the radar chart。 We can define the content of the chart here. We can also defind the numbers by accessing external links and resources such as JSON files.
-**/
-
-
-//create a new httprequest for this session
-var xmlhttp = new XMLHttpRequest();
-//json format data resource url 
-var url = "http://api.openweathermap.org/data/2.5/weather?q=chicago&appid=6aa0bdb1f586c5630d60b6237dfce45c";
-xmlhttp.open("GET", url, true);
-xmlhttp.send();
-
-//once the request is accepted, process the fowllowing function to get data and complete the app information
-xmlhttp.onreadystatechange = function() {
-    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
-        var myArr = xmlhttp.responseText;
-        var text = myArr;
-        var json = JSON.parse(text);
-        //alert(JSON.parse(text).coord.lon);
-        //document.getElementById("id01").innerHTML = myArr;
-    
-        document.getElementById("weather").innerHTML = "Today the weather is <em><b>" + json.weather[0].main + "</b></em>";
-		//
-		//variables for the title
-		//
-
-		//initiate the title
-		var svg = d3.select('#body')
-			.selectAll('svg')
-			.append('svg')
-			.attr("width", cfg.w+300)
-			.attr("height", cfg.h)
-
-
-		//variables for creating colour squares
-		var colorscale = d3.scale.category10();
-
-		//titles
-		var titleOptions = ['Final Scores'];
-		var text = svg.append("text")
-			.attr("class", "title")
-			.attr('transform', 'translate(90,0)') 
-			.attr("x", cfg.w-70)
-			.attr("y", 10)
-			.attr("font-size", "12px")
-			.attr("fill", "#404040")
-			.text("Find your best place to get food!");
-				
-		//Initiate title	
-		var title = svg.append("g")
-			.attr("class", "title")
-			.attr("height", 100)
-			.attr("width", 200)
-			.attr('transform', 'translate(90,20)') 
-			;
-			//Create colour squares
-			title.selectAll('rect')
-			  .data(titleOptions)
-			  .enter()
-			  .append("rect")
-			  .attr("x", cfg.w - 65)
-			  .attr("y", function(d, i){ return i * 20;})
-			  .attr("width", 10)
-			  .attr("height", 10)
-			  .style("fill", function(d, i){ return colorscale(i);})
-			  ;
-			//Create text next to squares
-			title.selectAll('text')
-			  .data(titleOptions)
-			  .enter()
-			  .append("text")
-			  .attr("x", cfg.w - 52)
-			  .attr("y", function(d, i){ return i * 20 + 9;})
-			  .attr("font-size", "13px")
-			  .attr("fill", "#737373")
-			  .text(function(d) { return d; })
-			  ;	
-
-		// those are functions for calculating scores for each store
-
-
-    }
-};
-
-//show the request function in the text format
-function myRequestFunction(arr) {
-    var out = "";
-    var i;
-    for(i = 0; i < arr.length; i++) {
-        out += '<a href="' + arr[i].url + '">' + 
-        arr[i].display + '</a><br>';
-    }
-    document.getElementById("id01").innerHTML = out;
-}
-
-
-
-
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-saul97/tutorial.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-saul97/tutorial.js
deleted file mode 100644
index 9e8c348..0000000
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-saul97/tutorial.js
+++ /dev/null
@@ -1,235 +0,0 @@
-/**
-Author: Priyank Jain
-This is the core js logic for adding markes and radarchart for Purdue 2016 Ironhacks Tutorials
-**/
-
-//variables for map and marks
-var elevator;
-var map;
-// 2-level array for washed markets data
-var washedData = [];
-
-
-String.prototype.capitalizeFirstLetter = function() {
-    return this.charAt(0).toUpperCase() + this.slice(1);
-}
-
-//init the google map in the webpage
-function initMap() {
-    
-    //create the google map
-    map = new google.maps.Map(document.getElementById('map'), {
-        center: {lat: 41.85081542, lng: -87.69123528},
-        zoom: 12
-    });
-
-
-    var infowindow = new google.maps.InfoWindow({
-                            content: ""
-                        });
-    
-    //create a new httprequest for this session
-    var xmlhttp = new XMLHttpRequest();
-    //json format data resource url 
-    var url = "https://data.cityofchicago.org/api/views/hu6v-hsqb/rows.json?accessType=DOWNLOAD";
-    xmlhttp.open("GET", url, true);
-    xmlhttp.send();
-
-    //once the request is accepted, process the fowllowing function to get data and complete the app information
-    xmlhttp.onreadystatechange = function() {
-        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
-            //get the text content from the page response
-            var myArr = xmlhttp.responseText;
-            var text = myArr;
-            json = JSON.parse(text);
-            //alert(json.data[1][1]);
-            //document.getElementById("id01").innerHTML = myArr;
-            
-            //
-            //add the information of the markets here 
-            //
-            for (var i = 0; i<44; i++) {
-                var dataLine = [];
-                //latitude - 0
-                dataLine.push(json.data[i][18]);
-                //longitude - 1
-                dataLine.push(json.data[i][19]);
-                //name - 2
-                dataLine.push(json.data[i][8]);
-                //street - 3
-                dataLine.push(json.data[i][9]);
-                //day in week - 4
-                dataLine.push(json.data[i][10]);
-                //start time - 5
-                dataLine.push(json.data[i][11]);
-                //end time - 6
-                dataLine.push(json.data[i][12]);
-                //start date -7
-                dataLine.push(json.data[i][13]);
-                //end date - 8
-                dataLine.push(json.data[i][14]);
-                //website - 9
-                dataLine.push(json.data[i][15][0]);
-
-                washedData.push(dataLine);
-            };
-            //alert(washedData);
-            //number of the markets
-            var numberOfMarkets = washedData.length;
-
-            //add markers on the map
-            var markers = [];
-            google.maps.event.addListener(map, 'idle', function() {
-            // Create an ElevationService
-            elevator = new google.maps.ElevationService();
-            $.each(markers, function(key, value)
-            {
-                value.setMap(null);
-            });
-            // getting bounds of current location
-            var boundBox = map.getBounds();
-            var southWest = boundBox.getSouthWest();
-            var northEast = boundBox.getNorthEast();
-            var lngSpan = northEast.lng() - southWest.lng();
-            var latSpan = northEast.lat() - southWest.lat();
-            // adding 20 markers to the map at random locations
-            var locations = [];
-            for (var j = 0; j < numberOfMarkets; j++)
-            {
-                var location = new google.maps.LatLng(
-                        southWest.lat() + latSpan * Math.random(),
-                        southWest.lng() + lngSpan * Math.random()
-                        );
-                locations.push(location);
-            }
-
-            // Create a LocationElevationRequest object using the array's one value
-            var positionalRequest = {
-                'locations': locations
-            };
-
-            elevator.getElevationForLocations(positionalRequest, function(results, status)
-            {
-                if (status === google.maps.ElevationStatus.OK)
-                {
-                    //if the infowindow is open
-                    var prev_infowindow =false;
-
-                    $.each(results, function(key, value) {
-
-                        //alert(key);
-                        markers[key] = new google.maps.Marker({
-                            position: {lat: Number(washedData[key][0]), lng: Number(washedData[key][1])},
-                            map: map,
-                            //icon: 'http://google-maps-icons.googlecode.com/files/red' + ('0' + key.toString()).slice(-2) + '.png'
-                        });
-                        google.maps.event.addListener(markers[key], 'click', function() {
-                            //if another window is open, close it
-                            if( prev_infowindow ) {
-                                prev_infowindow.close();
-                            }
-                            infowindow.setContent(washedData[key][2]);
-                            infowindow.open(map, markers[key]);
-                            //set the menu information about the market
-                            document.getElementById("market-name").innerHTML = "<b>Market Name</b>: " + washedData[key][2] + "</em>";
-                            document.getElementById("street-name").innerHTML = "<b>Address</b>: <em>" + washedData[key][3] + "</em>";
-                            if(washedData[key][9])
-                                document.getElementById("website").innerHTML = "<b>Website</b>: <em><a href=\"" + washedData[key][9] + "\">" + washedData[key][9] + "</a></em>";
-                            else
-                                document.getElementById("website").innerHTML = "<b>Website</b>: <em>Not available</em>";
-                            document.getElementById("open-status").innerHTML = "<b>Market Status</b>: <em>" + contain(washedData[key][4], day()).capitalizeFirstLetter() + "</em>";
-
-                            //dtata - scored stores
-                            //you will use scoring algorithm to get these value in the final project
-                            //here we only use random method to show the process
-                            var w = 200,
-                            h = 250;
-                            var array  = [];
-                            for (var i = 0; i<9; i++) {
-                                array[i] = Math.random();
-                            }
-                            var d = [
-                                [
-                                    {axis:"Open hours",value:array[0]},
-                                    {axis:"Availability",value:array[1]},
-                                    {axis:"Freshness",value:array[2]},
-                                    {axis:"Distance",value:array[3]},
-                                    {axis:"Prices",value:array[4]},
-                                    {axis:"Customer ratings",value:array[5]},
-                                    {axis:"Personal preference",value:array[6]},
-                                    {axis:"Other",value:array[7]},
-                                    {axis:"service",value:array[8]}
-                                ]
-                            ];
-
-                            document.getElementById("scores").innerHTML = "The final score for this market is <b><em>" + parseInt(score(array)*100) + "</b></em> out of <b><em>100</b></em>";                            
-
-                            //Options for the Radar chart, other than default
-                            var mycfg = {
-                              w: w,
-                              h: h,
-                              maxValue: 0.6,
-                              levels: 6,
-                              ExtraWidthX: 200
-                            }
-
-                            //Call function to draw the Radar chart
-                            //Will expect that data is in %'s
-                            RadarChart.draw("#chart", d, mycfg);
-                        });
-                        
-                    });
-                }
-            });
-        
-        });
-
-        }
-    };
-
-}
-
-//show the request function in the text format
-function myRequestFunction(arr) {
-        var out = "";
-        var i;
-        for(i = 0; i < arr.length; i++) {
-            out += '<a href="' + arr[i].url + '">' + 
-            arr[i].display + '</a><br>';
-        }
-        document.getElementById("id01").innerHTML = out;
-    }
-// Add a listener for idle event and call getElevation on a random set of marker in the bound
-
-//get the result of whether contains a substring
-function contain(str, substr) {
-    if(str.indexOf(substr) > -1)
-        return "open";
-    else
-        return "closed";
-}
-
-//get the day in a week by the number
-function day() {
-    var d = new Date();
-    var weekday = new Array(7);
-    weekday[0]=  "Sunday";
-    weekday[1] = "Monday";
-    weekday[2] = "Tuesday";
-    weekday[3] = "Wednesday";
-    weekday[4] = "Thursday";
-    weekday[5] = "Friday";
-    weekday[6] = "Saturday";
-
-    return weekday[d.getDay()];
-}
-
-//the algorithm for scoring
-//you should create your own reasonable methods for calculating scores
-function score(data) {
-    return data[0]*0.1 + data[2]*0.01 + data[3]*0.11 + data[1]*0.1 + data[4]*0.2 + data[5]*0.1 + data[6]*0.2 + data[7]*0.01 + data[8]*0.01;
-}
-
-
-
-
