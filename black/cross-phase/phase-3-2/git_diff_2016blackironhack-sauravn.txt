diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-sauravn/.DS_Store b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-sauravn/.DS_Store
index ef860f5..dfe81fb 100644
Binary files a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-sauravn/.DS_Store and b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-sauravn/.DS_Store differ
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-sauravn/README.md b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-sauravn/README.md
index da771bb..a084245 100755
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-sauravn/README.md
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-sauravn/README.md
@@ -1,4 +1,4 @@
-# 2016-BlackIronhack-sauravn - Submission 2
+# 2016-BlackIronhack-sauravn - Submission 3
 
 ## SafeTravels
 
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-sauravn/css/main.css b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-sauravn/css/main.css
new file mode 100755
index 0000000..a62ece9
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-sauravn/css/main.css
@@ -0,0 +1,145 @@
+body {
+	font-size: 16px;
+}
+
+#map-canvas {
+	width: 500px;
+	height: 500px;
+	background-color: #CCC;
+}
+
+#to,
+#from {
+	font-size: 16px;
+	width: 100%;
+}
+
+#go {
+	margin: 20px 0 20px 0;
+  width: 150px;
+}
+
+#slope_chart,
+#elevation_chart {
+	width: 350px;
+	height: 250px;
+	padding-top: 20px;
+}
+
+.chart.hide {
+	display: none;
+}
+
+.table {
+	margin-left: 0px;
+	margin-bottom: 0px;
+}
+
+.color-index {
+	width: 40px;
+	height: 20px;
+	border: solid 1px;
+}
+#green {
+	background-color: #3CB371;
+}
+#yellow {
+	background-color: #FFFF00;
+}
+#orange {
+	background-color: #FF9800;
+}
+#red {
+	background-color: #F44336;
+}
+#black {
+	background-color: #000000;
+}
+
+/* Fix for google maps info window */
+#map-canvas img {
+  max-width: none;
+}
+#map-canvas label {
+  width: auto;
+  display: inline;
+}
+
+.slope {
+	margin: 10px;
+}
+
+form#routes .span3 {
+	padding-top: 50px;
+}
+
+form input {
+	width: 480px;
+}
+
+form #from-to-switcher {
+	background-image: url(../img/fromToSwitcher.png);
+	background-repeat: no-repeat;
+	margin-left: 45%;
+	margin-top: 10px;
+	opacity: 0.5;
+	height: 30px;
+	width: 44px;
+}
+
+form #from-to-switcher:hover:after {
+	opacity : 1;
+}
+
+.slope-label {
+	position: relative;
+	top: -30px;
+	right: -320px;
+}
+
+#content {
+	width:	100px;
+	height: 100px;
+}
+
+#author {
+	margin-top: 20px;
+	font-size: 12px;
+	color: #999;
+}
+
+#travel-mode, #measurement-mode {
+	font-size: 16px;
+}
+
+.selector-wrapper{
+		padding-top: 20px;
+}
+
+.travel-info {
+	display: none;
+}
+
+/* Landscape phones and down */
+@media (max-width: 768px) {
+	#map-canvas {
+		width: 95%;
+		height: 350px;
+		margin: 0 auto;
+	}
+
+	#github {
+		display: none;
+	}
+	
+	.travel-info {
+		margin-left: 0px;
+	}
+}
+
+@media (min-width: 769px) {
+#map-canvas {
+		width: 100%;
+		height: 350px;
+	}
+}
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-sauravn/home.html b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-sauravn/home.html
index a06e51d..b6b1563 100755
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase2-public/2016blackironhack-sauravn/home.html
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-sauravn/home.html
@@ -7,6 +7,10 @@
 
   <link href="css/style.css" rel="stylesheet">
   <link href="css/bootstrap.min.css" rel="stylesheet">
+
+  <!-- For travel route -->
+  
+  <link rel="stylesheet" type="text/css" href="css/main.css?ver=3">
 <!--
   <script src="http://d3js.org/d3.v3.min.js"></script>
   <script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>
@@ -20,7 +24,7 @@
   <script type="text/javascript">
 	$(document).ready(function() {
 		$('#fullpage').fullpage({
-			anchors: ["intro-page", "app-page", "directory-page"],
+			anchors: ["intro-page", "app-page", "forum-page"],
 			loopBottom: true,
 		});
 	});  
@@ -100,7 +104,7 @@
       <div class="collapse navbar-collapse" id="myNavbar">
         <ul class="nav navbar-nav">
           <li><a href="#app-page">Plan Your Travel</a></li>
-		  <li><a href="#app-page">Discussion Forum</a></li>
+		  <li><a href="#forum-page">Discussion Forum</a></li>
 		  <li><a href="#app-page">Tip of the Day</a></li>
         </ul>
         <div class="nav-bar-current-info">
@@ -144,7 +148,7 @@
           </div>
 
           <!-- Adding location maps -->
-          <input id="pac-input" class="controls" type="text"
+          <!-- <input id="pac-input" class="controls" type="text"
         placeholder="Choose Your Destination">
     <div id="type-selector" class="controls">
       <input type="radio" name="type" id="changetype-all" checked="checked">
@@ -158,7 +162,7 @@
 
       <input type="radio" name="type" id="changetype-geocode">
       <label for="changetype-geocode">Geocodes</label>
-    </div>	
+    </div>	-->
 
           <!-- map -->
 		  <div id="map"></div>
@@ -182,6 +186,67 @@
 			  <!--tab content for weather-->
 			  <div id="weather" class="tab-pane fade in active">
 			  	<div id="menu-cover">
+
+        <!-- Travel Form Starts -->
+            <div class="row">
+    <div class="col-xs-12 col-sm-8">
+      <form id="routes">
+          <div id="target" class="place-inputs">
+            <div class="place-input">
+                <input id="from" type="text" placeholder="Type a place to start your journey">
+            </div>
+            <div id="from-to-switcher"></div>
+            <div class="place-input">
+                <input id="to" type="text" placeholder="Type your destination">
+            </div>
+
+            <div class="row place-input selector-wrapper">
+              <div class="col-xs-6">
+                <select class="form-control" id="travel-mode">
+                  <option>Driving</option>
+                  <option>Walking</option>
+                  <option>Bicycling</option>
+                </select>
+              </div>
+              <div class="col-xs-6">
+                <select class="form-control" id="measurement-mode">
+                  <option value="miles">Miles</option>
+                  <option value="km">Kilometres</option>
+                </select>
+              </div>
+            </div>
+
+            <div class="place-input">
+              <button class="btn btn-primary" type="submit" id="go">Go</button>
+            </div>
+          </div>
+      </form>
+    </div>
+    <br> 
+    <div class="col-xs-12 col-sm-4">
+        <div class="row travel-info">
+            Distance:
+            <span id="distance"></span>
+        </div>
+        <br><br>
+        <div class="row travel-info">
+          <div id="travel-label">
+            Travel Time:
+            <span id="travel-time"></span>
+          </div>
+        </div>
+    </div>
+  </div>
+  <div class="row">
+    <div class="col-xs-12 col-sm-12">
+      <div class="chart hide col-sm-6" id="elevation_chart"></div>
+      <div class="chart hide col-sm-6" id="slope_chart"></div>
+    </div>
+  </div>
+  <div id="directionsPanel"></div>
+
+  <!-- End Travel form -->
+
 				  	<!-- <div class="temp-daily">
 				  	  <img src="image/temp.jpg" id="img-temp">
 				  	  <h1 id="temp-day"></h1>
@@ -270,6 +335,15 @@
 		</div><!-- /.container -->
 	  </div><!--about section-->
 	</div><!--section-->
+
+  <div class="section">
+    <div class="about-section">
+      <div class="container">
+
+      </div>
+    </div>
+  </div>
+
   </div><!--fullpage-->
 
   <script src="js/bootstrap.min.js"></script>
@@ -285,13 +359,14 @@
   <script src="js/Gauge.js" type="text/javascript"></script>
 
 <!-- added for google maps -->
+<!-- 
 <script>
       // This example requires the Places library. Include the libraries=places
       // parameter when you first load the API. For example:
       // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
 
       function initMap() {
-        var map = new google.maps.Map(document.getElementById('map'), {
+        var map = new google.maps.Map(document.getElementById('map_1'), {
           center: {lat: -33.8688, lng: 151.2195},
           zoom: 13
         });
@@ -366,7 +441,27 @@
       }
     </script> 
     <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDunI19vLYPOGBoh_EzjdKNhzcFIzQZLZM&libraries=places&callback=initMap"
-        async defer></script>
+        async defer></script> -->
+
+    <!-- script related to travel maps -->
+      <script src="https://maps.googleapis.com/maps/api/js?libraries=places&sensor=true&key=AIzaSyDunI19vLYPOGBoh_EzjdKNhzcFIzQZLZM"></script>
+  <!-- <script src="https://maps.googleapis.com/maps/api/js?libraries=places&sensor=false"></script> -->
+  
+  <script type="text/javascript" src="https://www.google.com/jsapi"></script>
+
+  <script type="text/javascript" src="js/main_maps.js?ver=2"></script>
+
+   <script>
+    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+    ga('create', 'UA-40731267-1', 'flattestroute.com');
+    ga('send', 'pageview');
+
+   </script>
+    <!-- end travel maps -->
 
  <!-- <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDunI19vLYPOGBoh_EzjdKNhzcFIzQZLZM&libraries=places&callback=initMap" async defer></script> -->
 
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-sauravn/main_maps.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-sauravn/main_maps.js
new file mode 100755
index 0000000..0640e3a
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/black/blackironhack-phase3-public/2016blackironhack-sauravn/main_maps.js
@@ -0,0 +1,384 @@
+var directionsDisplay;
+var map = null;
+var elevator = null;
+var polyline;
+var routes = null;
+var slopes = null;
+var distance = null;
+var duration = null;
+var markersArray = [];
+var elevations = [];
+var mapPaths = [];
+var measurementMode;
+var metricUnit = null;
+var feetMultiplicator = null;
+// Load the visualization API with the columnchart package.
+google.load("visualization", "1", {packages: ["columnchart"]});
+
+// Runs after page is loaded.
+$(function () {
+    var from = getURLParameter('from');
+    var to = getURLParameter('to');
+    var travelMode = getURLParameter('travelMode');
+    measurementMode = getURLParameter('measurementMode');
+
+    // If this link is being shared set to and from
+    if (from != "null") {
+        $('#from').val(decodeURLParameter(from));
+    }
+
+    if (to != "null") {
+        $('#to').val(decodeURLParameter(to));
+    }
+
+    if (travelMode != "null") {
+        $('#travel-mode').val(decodeURLParameter(travelMode));
+    }
+
+    if (measurementMode === 'null') {
+        measurementMode = 'miles';
+    } else {
+        $('#measurement-mode').val(decodeURLParameter(measurementMode));
+    }
+
+    $("#from-to-switcher").on("click", function (e) {
+        var $fromInput = $("#from");
+        var $toInput = $("#to");
+        var oldFromVal = $fromInput.val();
+        $fromInput.val($toInput.val());
+        $toInput.val(oldFromVal);
+    });
+
+    //  Create event handler that will start the calcRoute function when
+    //  the go button is clicked.
+    $("form#routes").on("submit", function (e) {
+
+        measurementMode = $("#measurement-mode").val();
+        metricUnit = measurementMode == "miles" ? "ft" : "m";
+        e.preventDefault();
+        calcRoute();
+    });
+
+    initialize_maps();
+    initAutoComplete('from');
+    initAutoComplete('to');
+
+    if (from != "null" && to != "null") {
+        calcRoute();
+    }
+});
+
+function initialize_maps() {
+    // Set ability to make route draggable.
+    var rendererOptions = {
+        draggable: true,
+        hideRouteList: true,
+        polylineOptions: {
+            strokeOpacity: 0
+        }
+    };
+    // Initialize the directions renderer.
+    directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);
+    var mapCanvas = $('#map').get(0);
+    var mapOptions = {
+        center: new google.maps.LatLng(37.787930,-122.4074990),
+        zoom: 13,
+        // Disables zoom and streetview bar but can stil zoom with mouse.
+        disableDefaultUI: false,
+        mapTypeId: google.maps.MapTypeId.HYBRID
+    };
+    // Create a google maps object.
+    map = new google.maps.Map(mapCanvas, mapOptions);
+    directionsDisplay.setMap(map);
+    // Add elevation service.
+    elevator = new google.maps.ElevationService();
+
+    // Set up listener to change path elevation information if the user
+    // clicks on another suggested route.
+    google.maps.event.addListener(
+        directionsDisplay,
+        'routeindex_changed',
+        updateRoutes
+    );
+}
+
+function initAutoComplete(field) {
+    var input = document.getElementById(field);
+    autocomplete = new google.maps.places.Autocomplete(input);
+
+    // Prevent form submission when selecting place with enter.
+    // http://stackoverflow.com/questions/11388251/google-autocomplete-enter-to-select
+    $('#' + field).keydown(function (e) {
+      if (e.which == 13 && $('.pac-container:visible').length)
+        return false;
+    });
+}
+
+function calcRoute() {
+    var unitSystem = google.maps.UnitSystem.IMPERIAL;
+    var start = $("#from").val() || $("#from").attr("placeholder");
+    var end = $("#to").val() || $("#to").attr("placeholder");
+    var travelMode = $("#travel-mode").val();
+    if (measurementMode === "km") {
+      unitSystem = google.maps.UnitSystem.METRIC;
+    };
+    var request = {
+        origin: start,
+        destination: end,
+        unitSystem: unitSystem,
+        travelMode: google.maps.TravelMode[travelMode.toUpperCase()]
+    };
+    var DirectionsService = new google.maps.DirectionsService();
+    DirectionsService.route(request, function(result, status) {
+        if (status === "NOT_FOUND") {
+            alert("No directions found.");
+            return;
+        }
+        // Checks region for directions eligibility.
+        if (status == google.maps.DirectionsStatus.OK) {
+            directionsDisplay.setDirections(result);
+        }
+    });
+    sharableLink(start, end, travelMode);
+}
+function sharableLink(start, end, travelMode) {
+    // Update url to include sharable link
+    history.replaceState('null', 'Flat Route Finder', '?from=' + encodeURLParameter(start) + '&to=' + encodeURLParameter(end) +
+        '&travelMode=' + travelMode + '&measurementMode=' + measurementMode);
+}
+
+var updating = false;
+function updateRoutes() {
+    if (updating) return;
+    updating = true;
+    setTimeout(function () { updating = false; }, 100);
+    console.log("Updating routes");
+    // Check if the path has been populated, if it has been already
+    // populated, clear it.
+
+    var routes = this.directions.routes;
+    var path = routes[this.routeIndex].overview_path;
+    distance = routes[this.routeIndex].legs[0].distance;
+    duration = routes[this.routeIndex].legs[0].duration;
+
+    /* Shows distance in miles or kilometres, depending on measurement mode. */
+    if(measurementMode == "miles"){
+        $("#distance").html(distance.text);
+    }
+    else{
+        $("#distance").html((distance.value / 1000) + "Km");
+    }
+
+    $("#travel-time").html(duration.text);
+    $(".travel-info").show();
+    newPath(path, distance.value);
+}
+
+function newPath(path) {
+        var pathRequest = {
+        'path': path,
+        'samples': 300
+    };
+        // Initiate the path request.
+    elevator.getElevationAlongPath(pathRequest, plotElevation);
+}
+// Take an array of elevation result objects, draws a path on the map
+// and plots the elevation profile on the chart.
+function plotElevation(elevations, status) {
+    var slope, data, i, slopeChart, elevationChart, slopeChartDiv;
+    if (status !== google.maps.ElevationStatus.OK) {
+        alert("Error getting elevation data from Google");
+        return;
+    }
+    // Create a new chart in the elevation chart div.
+    elevationChartDiv = $("#elevation_chart").css('display', 'block');
+    // Extract the data to populate the chart.
+    map.elevationData = new google.visualization.DataTable();
+    map.elevationData.addColumn('string', 'Sample');
+    map.elevationData.addColumn('number', 'Elevation');
+    map.elevationData.locations = [];
+    map.elevationData.elevation = [];
+    for (i = 0; i < elevations.length; i++) {
+
+        // Change elevation from meters to feet.
+        if(measurementMode === "miles"){
+            feetMultiplicator = 3.28084;
+        }
+        else{
+            feetMultiplicator = 1;
+        }
+
+        map.elevationData.addRow([
+            '',
+            elevations[i].elevation * feetMultiplicator
+        ]);
+        map.elevationData.locations.push( elevations[i].location );
+        map.elevationData.elevation.push( elevations[i].elevation * feetMultiplicator );
+
+    }
+
+    // Draw the chart using the data within its div.
+
+    elevationChart = new google.visualization.ColumnChart(elevationChartDiv.get(0));
+    elevationChart.draw(map.elevationData, {
+        width: 350,
+        height: 245,
+        legend: 'none',
+        titleY: 'Elevation ('+metricUnit+')'
+    });
+    changeElevation(elevationChart, elevations);
+}
+function changeElevation(elevationChart, elevations) {
+    // Create event listenter on slope to show location and elevation.
+    google.visualization.events.addListener(elevationChart, 'onmouseover', elevationHover);
+    google.visualization.events.addListener(elevationChart, 'onmouseout',
+        elevationClear);
+
+    plotSlope(elevations);
+}
+function plotSlope(elevations){
+    slopeChartDiv = $("#slope_chart").css('display', 'block');
+    // Extract the data to populate the chart.
+    map.slopeData = new google.visualization.DataTable();
+    map.slopeData.addColumn('string', 'Sample');
+    map.slopeData.addColumn('number', 'Slope');
+
+    // Loop through each element of the elevation data,
+    // call the calc slope function using elevations.legth[i]
+    // and elevations.length[i+1]
+    // Create a slopes array so we can search through it later
+    slopes = [];
+    for (i = 0; i < elevations.length - 1; i++) {
+        slope = (calcSlope(elevations[i+1].elevation, elevations[i].elevation, distance.value/300)) * 100;
+        map.slopeData.addRow(['', slope]);
+        slopes.push({
+            slope: slope,
+            location: midpoint(elevations[i], elevations[i+1])
+        });
+    }
+
+// Draw the chart using the slope data within its div.
+    slopeChart = new google.visualization.ColumnChart(slopeChartDiv.get(0));
+    slopeChart.draw(map.slopeData, {
+        width: 350,
+        height: 245,
+        legend: 'none',
+        titleY: 'slope %'
+    });
+    $('.chart').removeClass('hide');
+    changeSlope(slopeChart, elevations, slopes);
+}
+function changeSlope(slopeChart, elevations, slopes) {
+    // Create event listenter on slope to show location and slope.
+    google.visualization.events.addListener(slopeChart, 'onmouseover', elevationHover);
+    google.visualization.events.addListener(slopeChart, 'onmouseout',
+        elevationClear);
+    drawPolyline(elevations, slopes);
+}
+
+function removePolylines() {
+    for (var i = 0; i < mapPaths.length; i++) {
+        var path = mapPaths[i];
+        path.setMap(null);
+    }
+
+    mapPaths = [];
+}
+
+function drawPolyline (elevations, slopes) {
+    // Create a polyline between each elevation, color code by slope.
+    // Remove any existing polylines before drawing a new polyline.
+    removePolylines();
+
+    for (var i = 0; i < slopes.length; i++) {
+        var routePath = [
+            elevations[i].location,
+            elevations[i+1].location
+        ];
+        var absSlope = Math.abs(slopes[i].slope);
+        if (absSlope <= 5) {
+            pathColor = "#3CB371";
+        } else if (absSlope <= 10) {
+            pathColor = "#FFFF00";
+        } else if (absSlope <= 15) {
+            pathColor = "#FF9800";
+        } else if (absSlope <= 20) {
+            pathColor = "#F44336";
+        }
+        else {
+            pathColor = "#000000";
+        }
+        mapPath = new google.maps.Polyline({
+            path: routePath,
+            strokeColor: pathColor,
+            strokeOpacity: 0.8,
+            strokeWeight: 5,
+            draggable: true
+        });
+        mapPath.setMap(map);
+        mapPaths.push(mapPath);
+    }
+}
+
+function deg(slope) {
+    return Math.floor(slope * 45) / 100;
+}
+
+function elevationHover (x) {
+    // Show location on the map.
+    var location = map.elevationData.locations[x.row];
+    var elevation = map.elevationData.elevation[x.row];
+    var slope = slopes[x.row].slope;
+    var contentString = "Elevation: " + Math.round(elevation) + " " + metricUnit + "<br>" +
+        "Slope: " + Math.round(slope) + "% (" + deg(slope) + "&#176;)";
+
+    map.locationMarker = new google.maps.Marker({
+        position: location,
+        map: map,
+        labelContent: "Lat: " + location.lat() + ". Lng: " + location.lng() +
+            ". Elevation: " + elevation
+    });
+    addinfoWindow(contentString);
+}
+function addinfoWindow(contentString) {
+    // Add info window to the map.
+    map.infowindow = new google.maps.InfoWindow({
+        content: contentString
+    });
+    map.infowindow.open(map, map.locationMarker);
+}
+function elevationClear (x) {
+    map.locationMarker.setMap(null);
+}
+
+function midpoint(point1, point2) {
+    // To get the midpoint, find the average between each respective point
+    var lat = (point1.location.lat() + point2.location.lat()) / 2;
+    var lng = (point1.location.lng() + point2.location.lng()) / 2;
+    return new google.maps.LatLng(lat, lng);
+}
+
+// Calculate slope using elevation change between two points
+// over a given distance in m, the distance between each measurement.
+function calcSlope(elev1M, elev2M, distanceM) {
+    slope = (elev1M - elev2M) / distanceM;
+    return slope;
+}
+
+// Gets the 'to' and 'from' url Parameter for sharing links
+// Source: http://stackoverflow.com/questions/1403888/get-url-parameter-with-jquery
+function getURLParameter(name) {
+    return decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)')
+        .exec(location.search)||[,null])[1]);
+}
+
+//change spaces to plus(+) sign
+function encodeURLParameter(str) {
+  return encodeURIComponent(str).replace(/%20/g, "+");
+}
+
+//change plus(+) sign to spaces
+function decodeURLParameter(str) {
+  return decodeURIComponent(str).replace(/[!'()]/g, escape)
+    .replace(/\+/g, " ");
+}
