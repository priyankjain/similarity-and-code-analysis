{
  "name": "ansi-escape-sequences",
  "author": {
    "name": "Lloyd Brookes",
    "email": "75pound@gmail.com"
  },
  "version": "1.0.2",
  "description": "A simple library containing all known terminal ansi escape codes and sequences. Useful for adding colour to your command-line output or building a dynamic text user interface.",
  "repository": {
    "type": "git",
    "url": "https://github.com/75lb/ansi-escape-sequences.git"
  },
  "main": "./lib/ansi-escape-sequences.js",
  "bin": {
    "ansi": "bin/cli.js"
  },
  "license": "MIT",
  "keywords": [
    "ansi",
    "terminal",
    "colour",
    "color",
    "command line",
    "cursor"
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "tape test/*.js",
    "lint": "jshint lib/*.js bin/*.js test/*.js; echo",
    "docs": "jsdoc2md -d 1 -l js --no-gfm -t jsdoc2md/README.hbs lib/*.js > README.md; echo"
  },
  "dependencies": {
    "array-tools": "^1.4.1"
  },
  "devDependencies": {
    "jsdoc-to-markdown": "next",
    "tape": "^3.5.0"
  },
  "readme": "[![view on npm](http://img.shields.io/npm/v/ansi-escape-sequences.svg)](https://www.npmjs.org/package/ansi-escape-sequences)\n[![npm module downloads per month](http://img.shields.io/npm/dm/ansi-escape-sequences.svg)](https://www.npmjs.org/package/ansi-escape-sequences)\n[![Build Status](https://travis-ci.org/75lb/ansi-escape-sequences.svg?branch=master)](https://travis-ci.org/75lb/ansi-escape-sequences)\n[![Dependency Status](https://david-dm.org/75lb/ansi-escape-sequences.svg)](https://david-dm.org/75lb/ansi-escape-sequences)\n\n<a name=\"module_ansi-escape-sequences\"></a>\n# ansi-escape-sequences\nA simple library containing all known terminal [ansi escape codes and sequences](http://en.wikipedia.org/wiki/ANSI_escape_code). Useful for adding colour to your command-line output, or building a dynamic text user interface.\n\n**Example**  \n```js\nvar ansi = require(\"ansi-escape-sequences\");\n```\n\n* [ansi-escape-sequences](#module_ansi-escape-sequences)\n  * [.sgr](#module_ansi-escape-sequences.sgr)\n    * [.sequence()](#module_ansi-escape-sequences.sgr.sequence) ⇒ <code>string</code>\n    * [.format()](#module_ansi-escape-sequences.sgr.format) ⇒ <code>string</code>\n  * [.cursor](#module_ansi-escape-sequences.cursor)\n    * [.up([lines])](#module_ansi-escape-sequences.cursor.up) ⇒ <code>string</code>\n    * [.down([lines])](#module_ansi-escape-sequences.cursor.down) ⇒ <code>string</code>\n    * [.forward([lines])](#module_ansi-escape-sequences.cursor.forward) ⇒ <code>string</code>\n    * [.back([lines])](#module_ansi-escape-sequences.cursor.back) ⇒ <code>string</code>\n    * [.nextLine([lines])](#module_ansi-escape-sequences.cursor.nextLine) ⇒ <code>string</code>\n    * [.previousLine([lines])](#module_ansi-escape-sequences.cursor.previousLine) ⇒ <code>string</code>\n    * [.horizontalAbsolute(n)](#module_ansi-escape-sequences.cursor.horizontalAbsolute) ⇒ <code>string</code>\n    * [.position(n, m)](#module_ansi-escape-sequences.cursor.position) ⇒ <code>string</code>\n  * [.erase](#module_ansi-escape-sequences.erase)\n    * [.display(n)](#module_ansi-escape-sequences.erase.display) ⇒ <code>string</code>\n    * [.inLine(n)](#module_ansi-escape-sequences.erase.inLine) ⇒ <code>string</code>\n\n<a name=\"module_ansi-escape-sequences.sgr\"></a>\n## ansi.sgr\nSelect Graphic Rendition codes\n\n**Properties**\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th><th>Type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <td>reset</td><td><code>string</code></td>\n    </tr><tr>\n    <td>bold</td><td><code>string</code></td>\n    </tr><tr>\n    <td>italic</td><td><code>string</code></td>\n    </tr><tr>\n    <td>underline</td><td><code>string</code></td>\n    </tr><tr>\n    <td>fontDefault</td><td><code>string</code></td>\n    </tr><tr>\n    <td>font2</td><td><code>string</code></td>\n    </tr><tr>\n    <td>font3</td><td><code>string</code></td>\n    </tr><tr>\n    <td>font4</td><td><code>string</code></td>\n    </tr><tr>\n    <td>font5</td><td><code>string</code></td>\n    </tr><tr>\n    <td>font6</td><td><code>string</code></td>\n    </tr><tr>\n    <td>imageNegative</td><td><code>string</code></td>\n    </tr><tr>\n    <td>imagePositive</td><td><code>string</code></td>\n    </tr><tr>\n    <td>black</td><td><code>string</code></td>\n    </tr><tr>\n    <td>red</td><td><code>string</code></td>\n    </tr><tr>\n    <td>green</td><td><code>string</code></td>\n    </tr><tr>\n    <td>yellow</td><td><code>string</code></td>\n    </tr><tr>\n    <td>blue</td><td><code>string</code></td>\n    </tr><tr>\n    <td>magenta</td><td><code>string</code></td>\n    </tr><tr>\n    <td>cyan</td><td><code>string</code></td>\n    </tr><tr>\n    <td>white</td><td><code>string</code></td>\n    </tr>\n  </tbody>\n</table>\n\n**Example**  \n```js\nconsole.log(ansi.sgr.red + \"this is red\" + ansi.sgr.reset);\n```\n\n* [.sgr](#module_ansi-escape-sequences.sgr)\n  * [.sequence()](#module_ansi-escape-sequences.sgr.sequence) ⇒ <code>string</code>\n  * [.format()](#module_ansi-escape-sequences.sgr.format) ⇒ <code>string</code>\n\n<a name=\"module_ansi-escape-sequences.sgr.sequence\"></a>\n### sgr.sequence() ⇒ <code>string</code>\nReturns an a sequence setting one or more effects\n\n<table>\n  <thead>\n    <tr>\n      <th>Type</th><th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <td><code>string</code> | <code>Array.&lt;string&gt;</code></td><td>a sgr effect, or list of effects</td>\n    </tr>\n  </tbody>\n</table>\n\n**Example**  \n```js\n> ansi.sgrSequence(\"green\")\n'\\u001b[32m'\n> ansi.sgrSequence([ \"green\", \"underline\" ])\n'\\u001b[32;4m'\n```\n<a name=\"module_ansi-escape-sequences.sgr.format\"></a>\n### sgr.format() ⇒ <code>string</code>\nA convenience function, formatting the input string with the specified sgr effects.\n\n<table>\n  <thead>\n    <tr>\n      <th>Type</th><th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <td><code>string</code></td><td>the string to format</td>\n    </tr><tr>\n    <td><code>Array.&lt;string&gt;</code></td><td>a list of sgr effects to add</td>\n    </tr>\n  </tbody>\n</table>\n\n**Example**  \n```js\n> ansi.sgr.format(\"what?\", \"green\")\n'\\u001b[32mwhat?\\u001b[0m'\n> ansi.sgr.format(\"what?\", [\"green\", \"bold\"])\n'\\u001b[32;1mwhat?\\u001b[0m'\n```\n<a name=\"module_ansi-escape-sequences.cursor\"></a>\n## ansi.cursor\ncursor-related sequences\n\n\n* [.cursor](#module_ansi-escape-sequences.cursor)\n  * [.up([lines])](#module_ansi-escape-sequences.cursor.up) ⇒ <code>string</code>\n  * [.down([lines])](#module_ansi-escape-sequences.cursor.down) ⇒ <code>string</code>\n  * [.forward([lines])](#module_ansi-escape-sequences.cursor.forward) ⇒ <code>string</code>\n  * [.back([lines])](#module_ansi-escape-sequences.cursor.back) ⇒ <code>string</code>\n  * [.nextLine([lines])](#module_ansi-escape-sequences.cursor.nextLine) ⇒ <code>string</code>\n  * [.previousLine([lines])](#module_ansi-escape-sequences.cursor.previousLine) ⇒ <code>string</code>\n  * [.horizontalAbsolute(n)](#module_ansi-escape-sequences.cursor.horizontalAbsolute) ⇒ <code>string</code>\n  * [.position(n, m)](#module_ansi-escape-sequences.cursor.position) ⇒ <code>string</code>\n\n<a name=\"module_ansi-escape-sequences.cursor.up\"></a>\n### cursor.up([lines]) ⇒ <code>string</code>\nMoves the cursor `lines` cells up. If the cursor is already at the edge of the screen, this has no effect\n\n<table>\n  <thead>\n    <tr>\n      <th>Param</th><th>Type</th><th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <td>[lines]</td><td><code>number</code></td><td><code>1</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<a name=\"module_ansi-escape-sequences.cursor.down\"></a>\n### cursor.down([lines]) ⇒ <code>string</code>\nMoves the cursor `lines` cells down. If the cursor is already at the edge of the screen, this has no effect\n\n<table>\n  <thead>\n    <tr>\n      <th>Param</th><th>Type</th><th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <td>[lines]</td><td><code>number</code></td><td><code>1</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<a name=\"module_ansi-escape-sequences.cursor.forward\"></a>\n### cursor.forward([lines]) ⇒ <code>string</code>\nMoves the cursor `lines` cells forward. If the cursor is already at the edge of the screen, this has no effect\n\n<table>\n  <thead>\n    <tr>\n      <th>Param</th><th>Type</th><th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <td>[lines]</td><td><code>number</code></td><td><code>1</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<a name=\"module_ansi-escape-sequences.cursor.back\"></a>\n### cursor.back([lines]) ⇒ <code>string</code>\nMoves the cursor `lines` cells back. If the cursor is already at the edge of the screen, this has no effect\n\n<table>\n  <thead>\n    <tr>\n      <th>Param</th><th>Type</th><th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <td>[lines]</td><td><code>number</code></td><td><code>1</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<a name=\"module_ansi-escape-sequences.cursor.nextLine\"></a>\n### cursor.nextLine([lines]) ⇒ <code>string</code>\nMoves cursor to beginning of the line n lines down.\n\n<table>\n  <thead>\n    <tr>\n      <th>Param</th><th>Type</th><th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <td>[lines]</td><td><code>number</code></td><td><code>1</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<a name=\"module_ansi-escape-sequences.cursor.previousLine\"></a>\n### cursor.previousLine([lines]) ⇒ <code>string</code>\nMoves cursor to beginning of the line n lines up.\n\n<table>\n  <thead>\n    <tr>\n      <th>Param</th><th>Type</th><th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <td>[lines]</td><td><code>number</code></td><td><code>1</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<a name=\"module_ansi-escape-sequences.cursor.horizontalAbsolute\"></a>\n### cursor.horizontalAbsolute(n) ⇒ <code>string</code>\nMoves the cursor to column n.\n\n<table>\n  <thead>\n    <tr>\n      <th>Param</th><th>Type</th><th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <td>n</td><td><code>number</code></td><td>column number</td>\n    </tr>\n  </tbody>\n</table>\n\n<a name=\"module_ansi-escape-sequences.cursor.position\"></a>\n### cursor.position(n, m) ⇒ <code>string</code>\nMoves the cursor to row n, column m. The values are 1-based, and default to 1 (top left corner) if omitted.\n\n<table>\n  <thead>\n    <tr>\n      <th>Param</th><th>Type</th><th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <td>n</td><td><code>number</code></td><td>row number</td>\n    </tr><tr>\n    <td>m</td><td><code>number</code></td><td>column number</td>\n    </tr>\n  </tbody>\n</table>\n\n<a name=\"module_ansi-escape-sequences.erase\"></a>\n## ansi.erase\nerase sequences\n\n\n* [.erase](#module_ansi-escape-sequences.erase)\n  * [.display(n)](#module_ansi-escape-sequences.erase.display) ⇒ <code>string</code>\n  * [.inLine(n)](#module_ansi-escape-sequences.erase.inLine) ⇒ <code>string</code>\n\n<a name=\"module_ansi-escape-sequences.erase.display\"></a>\n### erase.display(n) ⇒ <code>string</code>\nClears part of the screen. If n is 0 (or missing), clear from cursor to end of screen. If n is 1, clear from cursor to beginning of the screen. If n is 2, clear entire screen.\n\n<table>\n  <thead>\n    <tr>\n      <th>Param</th><th>Type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <td>n</td><td><code>number</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<a name=\"module_ansi-escape-sequences.erase.inLine\"></a>\n### erase.inLine(n) ⇒ <code>string</code>\nErases part of the line. If n is zero (or missing), clear from cursor to the end of the line. If n is one, clear from cursor to beginning of the line. If n is two, clear entire line. Cursor position does not change.\n\n<table>\n  <thead>\n    <tr>\n      <th>Param</th><th>Type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <td>n</td><td><code>number</code></td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n*documented by [jsdoc-to-markdown](https://github.com/75lb/jsdoc-to-markdown)*\n\n&copy; 2015 Lloyd Brookes <75pound@gmail.com>\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/75lb/ansi-escape-sequences/issues"
  },
  "_id": "ansi-escape-sequences@1.0.2",
  "dist": {
    "shasum": "2402c6abde226eec55a91a87db67eea9b3704188"
  },
  "_from": "ansi-escape-sequences@^1.0.2",
  "_resolved": "https://registry.npmjs.org/ansi-escape-sequences/-/ansi-escape-sequences-1.0.2.tgz"
}
