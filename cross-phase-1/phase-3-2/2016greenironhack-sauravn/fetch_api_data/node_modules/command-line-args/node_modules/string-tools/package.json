{
  "name": "string-tools",
  "author": {
    "name": "Lloyd Brookes",
    "email": "75pound@gmail.com"
  },
  "version": "0.1.8",
  "description": "Some useful functions for working with strings",
  "repository": {
    "type": "git",
    "url": "https://github.com/75lb/string-tools.git"
  },
  "main": "./lib/string-tools.js",
  "license": "MIT",
  "keywords": [
    "string",
    "fill",
    "pad",
    "escape",
    "regex",
    "repeat"
  ],
  "scripts": {
    "test": "tape test/*.js",
    "lint": "jshint lib/*.js test/*.js; echo",
    "docs": "jsdoc2md -d 1 -t jsdoc2md/README.hbs lib/*.js > README.md; echo"
  },
  "devDependencies": {
    "tape": "^4"
  },
  "readme": "[![view on npm](http://img.shields.io/npm/v/string-tools.svg)](https://www.npmjs.org/package/string-tools)\n[![npm module downloads per month](http://img.shields.io/npm/dm/string-tools.svg)](https://www.npmjs.org/package/string-tools)\n[![Build Status](https://travis-ci.org/75lb/string-tools.svg?branch=master)](https://travis-ci.org/75lb/string-tools)\n[![Dependency Status](https://david-dm.org/75lb/string-tools.svg)](https://david-dm.org/75lb/string-tools)\n\n<a name=\"module_string-tools\"></a>\n# string-tools\n**Example**  \n```js\nvar s = require(\"string-tools\");\n```\n\n* [string-tools](#module_string-tools)\n  * [.symbol](#module_string-tools.symbol)\n  * [.escapeRegExp()](#module_string-tools.escapeRegExp)\n  * [.fill(fillWith, len)](#module_string-tools.fill) ⇒ <code>string</code>\n  * [.padRight(input, width, [padWith])](#module_string-tools.padRight) ⇒ <code>string</code>\n  * [.repeat(input, times)](#module_string-tools.repeat) ⇒ <code>string</code>\n  * [.clipLeft(input, width, [prefix])](#module_string-tools.clipLeft) ⇒ <code>string</code>\n\n<a name=\"module_string-tools.symbol\"></a>\n## s.symbol\nsome cross platform symbols (`tick` and `cross`)\n\n**Kind**: static property of <code>[string-tools](#module_string-tools)</code>  \n<a name=\"module_string-tools.escapeRegExp\"></a>\n## s.escapeRegExp()\nescape special regular expression characters\n\n**Kind**: static method of <code>[string-tools](#module_string-tools)</code>  \n**Example**  \n```js\n> s.escapeRegExp(\"(.*)\");\n'\\\\(\\\\.\\\\*\\\\)'\n```\n<a name=\"module_string-tools.fill\"></a>\n## s.fill(fillWith, len) ⇒ <code>string</code>\nCreate a new string filled with the supplied character\n\n**Kind**: static method of <code>[string-tools](#module_string-tools)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| fillWith | <code>string</code> | the fill character |\n| len | <code>number</code> | the length of the output string |\n\n**Example**  \n```js\n> s.fill(\"a\", 10)\n'aaaaaaaaaa'\n> s.fill(\"ab\", 10)\n'aaaaaaaaaa'\n```\n<a name=\"module_string-tools.padRight\"></a>\n## s.padRight(input, width, [padWith]) ⇒ <code>string</code>\nAdd padding to the right of a string\n\n**Kind**: static method of <code>[string-tools](#module_string-tools)</code>  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| input | <code>string</code> |  | the string to pad |\n| width | <code>number</code> |  | the desired final width |\n| [padWith] | <code>string</code> | <code>&quot;\\&quot; \\&quot;&quot;</code> | the padding character |\n\n**Example**  \n```js\n> s.padRight(\"clive\", 1)\n'clive'\n> s.padRight(\"clive\", 1, \"-\")\n'clive'\n> s.padRight(\"clive\", 10, \"-\")\n'clive-----'\n```\n<a name=\"module_string-tools.repeat\"></a>\n## s.repeat(input, times) ⇒ <code>string</code>\nreturns the input string repeated the specified number of times\n\n**Kind**: static method of <code>[string-tools](#module_string-tools)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| input | <code>string</code> | input string to repeat |\n| times | <code>number</code> | the number of times to repeat |\n\n<a name=\"module_string-tools.clipLeft\"></a>\n## s.clipLeft(input, width, [prefix]) ⇒ <code>string</code>\nreturns the input string clipped from the left side in order to meet the specified `width`\n\n**Kind**: static method of <code>[string-tools](#module_string-tools)</code>  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| input | <code>string</code> |  | input string to repeat |\n| width | <code>number</code> |  | the desired final width |\n| [prefix] | <code>string</code> | <code>&quot;...&quot;</code> | the prefix to replace the clipped region |\n\n\n* * *\n\n&copy; 2015 Lloyd Brookes \\<75pound@gmail.com\\>. Documented by [jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/75lb/string-tools/issues"
  },
  "_id": "string-tools@0.1.8",
  "dist": {
    "shasum": "a518f5c912f8fc56b6f18c942475d2af01378a9a"
  },
  "_from": "string-tools@^0.1.4",
  "_resolved": "https://registry.npmjs.org/string-tools/-/string-tools-0.1.8.tgz"
}
