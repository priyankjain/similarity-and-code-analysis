diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-dengc/css/main.css b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-dengc/css/main.css
new file mode 100644
index 0000000..290407d
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-dengc/css/main.css
@@ -0,0 +1,149 @@
+/*
+This is the tutorial project for 2015-fall Purdue Ironhack, which is organized by Reserach Center of Open Digital Innovation(RCODI) at Purdue University. 
+If you want to know more about the Ironhack or about the RCODI, please find our website here: https://www.purdue.edu/opendigital/
+You can checkout the code for this project on github: https://github.com/charlessong0/2015-Purdue-Ironhack
+The demo page of this project is located at: http://test.rcodi.charlessong.me/
+*/
+
+/* make the body div cover the whole page */
+
+html, body { 
+height: 140%; 
+margin: 12; 
+padding: 0; 
+background-image: url("background.jpeg");
+background-repeat: no-repeat;
+background-position: bottom;
+-webkit-background-size: 1400px 1400px;
+}
+
+.bubbleChart {
+	min-width: 100px;
+	max-width: 800px;
+	height: 500px;
+	margin: 0 auto;
+}
+
+/* use "#" for ids and use "." for classes
+usually an id in unique in one html page*/
+#header {
+    background-color:green;
+    text-align:center;
+    padding:5px;
+}
+
+h1 {
+    color: red;
+    font-style: oblique;
+    font-size: 333%;
+}
+
+#title{
+	font-size: 120%;
+	color:white;
+}
+
+#map{
+	/* here we use absolute layout to find the position for google map
+	you may want to use relative rather than absolute in your own application */
+	position: absolute;
+    /* cover the 70 percent of the page width*/
+    width: 70%;
+    height: 70%;
+}
+
+#sec1{
+	position: absolute;
+	/* define the postiion of information panel */
+	left: 72%;
+}
+
+#info{
+	position: absolute;
+	/* define the postiion of information panel */
+	top: 100%;
+
+}
+
+#position-info{
+	background-color: #edeff1;
+	width: 40%;
+}
+
+#sec2{
+	position: absolute;
+	/* define the postiion of information panel */
+	left: 42%;
+	top:0%;
+}
+
+#side-menu{
+	position: absolute;
+	/* define the postiion of information panel */
+	top: 105%;
+	left: 0%;
+    /* cover the 30 percent of the page width*/
+	width: 100%;
+	height: 0%;
+
+
+}
+
+#menu-cover{
+	position: absolute;
+	top: 3%;
+	left: 3%;
+}
+
+.menu-line{
+	height: 40px;
+}
+
+#menu-cover {
+	height: 35%;
+	width: 90%;
+	/* define the background color of the information panel */
+/*	background-color: #edeff1;
+*/	/* set radius for the ellipse frame */
+    border-radius: 11px;
+    /* add paddings so there would be some blank spaces around the informaiton panel */
+    padding: 24px 23px 20px;
+    /* settings for the font */
+    font-family: "Lato",Helvetica,Arial,sans-serif;
+    font-size: 15px;
+}
+
+/* there defines every single line in the information panel */
+.menu-line{
+	border-radius: 11px;
+    box-shadow: none;
+    color: #34495e;
+    font-family: "Lato",Helvetica,Arial,sans-serif;
+    font-size: 15px;
+    line-height: 1.467;
+    padding: 4px 4px;
+}
+
+.button1{
+    height:30px;
+    width:250px;
+	position: absolute;
+	top: 493%;
+	left: 20%;
+}
+
+.button2{
+    height:30px;
+    width:250px;
+	position: absolute;
+	top: 593%;
+	left: 20%;
+}
+  
+  #sec3{
+
+  position: absolute;
+  /* define the postiion of information panel */
+  left: 72%;
+  top:50%;
+  }
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/startPage.css b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-dengc/css/startPage.css
index a0774b8..1640071 100644
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/startPage.css
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-dengc/css/startPage.css
@@ -35,10 +35,9 @@ h3 {
     font-size: 160%;
 }
 
-p{
-	text-decoration: underline;
+#text{
 	font-size: 120%;
-	color:white;
+	color:black;
 }
 
 img {
@@ -86,5 +85,3 @@ img {
 
 }
 
-
-
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/index.html b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-dengc/index.html
index 22d520f..d29cf65 100644
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/index.html
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-dengc/index.html
@@ -1,3 +1,10 @@
+<!--
+This is the tutorial project for 2015-fall Purdue Ironhack, which is organized by Reserach Center of Open Digital Innovation(RCODI) at Purdue University. 
+If you want to know more about the Ironhack or about the RCODI, please find our website here: https://www.purdue.edu/opendigital/
+You can checkout the code for this project on github: https://github.com/charlessong0/2015-Purdue-Ironhack
+The demo page of this project is located at: http://test.rcodi.charlessong.me/
+-->
+
 <html>
   <head>
 	<meta charset="UTF-8">
@@ -26,7 +33,8 @@
   <body>
 	<div id="header">
 			<h1>Lafayette Fresh Vegetable</h1>
-		<p><a href="main.html">Try to find a market for fresh vegetable? Check it out!</a></p>
+		<p id = "text"><a href="main.html">Try to find a market for fresh vegetable? Check it out! &#10154; &#10152; &#8688; &#10140; &#8658;</a></p>
+
 
 	</div>
 
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/main.html b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-dengc/main.html
index fbff823..217febd 100644
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/main.html
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-dengc/main.html
@@ -1,16 +1,23 @@
+<!--
+This is the tutorial project for 2015-fall Purdue Ironhack, which is organized by Reserach Center of Open Digital Innovation(RCODI) at Purdue University. 
+If you want to know more about the Ironhack or about the RCODI, please find our website here: https://www.purdue.edu/opendigital/
+You can checkout the code for this project on github: https://github.com/charlessong0/2015-Purdue-Ironhack
+The demo page of this project is located at: http://test.rcodi.charlessong.me/
+-->
+
 <html>
   <head>
 	<meta charset="UTF-8">
 	<meta name="descriptions" content="Place to Eat">
 	<meta name="author" content="Charles Song">
 
-	<link rel="stylesheet" href="css/tutorial.css" >
+	<link rel="stylesheet" href="css/main.css" >
 
 	<script src="http://code.jquery.com/jquery-1.9.1.js" type="text/javascript"></script>
 
 	<script src="http://d3js.org/d3.v3.min.js"></script>
 
-	<script src="js/tutorial.js" type="text/javascript"></script>
+	<script src="js/main.js" type="text/javascript"></script>
 	<script src="js/script.js" type="text/javascript" ></script>
 
  <link href='http://fonts.googleapis.com/css?family=Source+Sans+Pro:200,600,200italic,600italic&subset=latin,vietnamese' rel='stylesheet' type='text/css'>
@@ -27,7 +34,6 @@
   <script src="http://phuonghuynh.github.io/js/bower_components/bubble-chart/src/plugins/lines/lines.js"></script>
   
 
-
   </head>
 
 
@@ -41,7 +47,7 @@
 		</div>
 
 	<div id="sec1">
-		<img src="image/market2.jpg" style="width:355px;height:458px;">
+		<img src="image/market2.jpg" style="width:365px;height:470px;">
 
 	</div>
 
@@ -59,6 +65,7 @@
 					<div id="weather" class="menu-line">sunny!</div>
 					<div id="sec2" class="bubbleChart"></div>
           
+
 				</div>
 				<div id="position-info">
 					<div id="market" class="menu-line">
@@ -67,12 +74,108 @@
 					</div>
 					<div id="website" class="menu-line"></div>
 					<div id="street-name" class="menu-line"></div>
-					<button class="button" onclick="myFunction()">Overview of the market (score out of 100):</button>
+					<button class="button1" id ="btn1" onclick="myFunction()" disabled>Overview of the market (score out of 100):</button>
+          <button class="button2" id ="btn2" onclick="myNewFunction()" disabled>Rank among markets:</button>
+
+          <script type="text/javascript">
+
+          function myNewFunction() {
+
+            $("#sec2").empty();
+            document.getElementById("btn1").disabled = false;
+            document.getElementById("btn2").disabled = true;
+    $(document).ready(function () {
+      bubbleChart = new d3.svg.BubbleChart({
+    supportResponsive: true,
+    //container: => use @default
+    size: 600,
+    //viewBoxSize: => use @default
+    innerRadius: 600 / 3.5,
+    //outerRadius: => use @default
+    radiusMin: 50,
+    //radiusMax: use @default
+    //intersectDelta: use @default
+    //intersectInc: use @default
+    //circleColor: use @default
+    data: {
+      items: [
+        {text: "Price", count: Math.round(10 * Math.random()+1)},
+        {text: "Distance to Downtown", count: Math.round(10 * Math.random()+1)},
+        {text: "Freshness", count: Math.round(10 * Math.random()+1)},
+        {text: "Distance to Purdue", count: Math.round(10 * Math.random()+1)},
+        {text: "Service", count: Math.round(10 * Math.random()+1)},
+        {text: "Open Hours", count: Math.round(10 * Math.random()+1)},
+        {text: "Rating", count: Math.round(10 * Math.random()+1)},
+        {text: "Kinds of Vegetables", count: Math.round(10 * Math.random()+1)},
+        {text: "Others", count: Math.round(10 * Math.random()+1)},
+      ],
+      eval: function (item) {return item.count;},
+      classed: function (item) {return item.text.split(" ").join("");}
+    },
+
+    plugins: [
+    
+      {
+        name: "lines",
+        options: {
+          format: [
+            {// Line #0
+              textField: "count",
+              classed: {count: true},
+              style: {
+                "font-size": "28px",
+                "font-family": "Source Sans Pro, sans-serif",
+                "text-anchor": "middle",
+                fill: "black"
+              },
+              attr: {
+                dy: "0px",
+                x: function (d) {return d.cx;},
+                y: function (d) {return d.cy;}
+              }
+            },
+            {// Line #1
+              textField: "text",
+              classed: {text: true},
+              style: {
+                "font-size": "14px",
+                "font-family": "Source Sans Pro, sans-serif",
+                "text-anchor": "middle",
+                fill: "black"
+              },
+              attr: {
+                dy: "20px",
+                x: function (d) {return d.cx;},
+                y: function (d) {return d.cy;}
+              }
+            }
+          ],
+          centralFormat: [
+            {// Line #0
+              style: {"font-size": "50px"},
+              attr: {}
+            },
+            {// Line #1
+              style: {"font-size": "30px"},
+              attr: {dy: "40px"}
+            }
+          ]
+        }
+      }]
+  });
+
+
+});
+}
+          </script>
+
 					<script>
 function myFunction() {
 	// var x = document.getElementById("sec2");
  //  x.remove("bubbleChart");
  $("#sec2").empty();
+ document.getElementById("btn2").disabled = false;
+ document.getElementById("btn1").disabled = true;
     $(document).ready(function () {
     	bubbleChart = new d3.svg.BubbleChart({
     supportResponsive: true,
@@ -160,6 +263,8 @@ function myFunction() {
 					<div id="open-status" class="menu-line"></div>
 					<div id="scores" class="menu-line"></div>
 
+
+
 				</div>
 			
 			</div>
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-dengc/main.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-dengc/main.js
new file mode 100644
index 0000000..646de3a
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-dengc/main.js
@@ -0,0 +1,361 @@
+/**
+This is the tutorial project for 2015-fall Purdue Ironhack, which is organized by Reserach Center of Open Digital Innovation(RCODI) at Purdue University. 
+If you want to know more about the Ironhack or about the RCODI, please find our website here: https://www.purdue.edu/opendigital/
+You can checkout the code for this project on github: https://github.com/charlessong0/2015-Purdue-Ironhack
+The demo page of this project is located at: http://test.rcodi.charlessong.me/
+
+This is the javascript file for the Google map.
+The position for the map and chart will be changed in the final project. Generally the chart will show up once you click the lable in the map.
+**/
+
+
+//init the google map in the webpage         
+function initMap() {
+
+    //alert(timeStamp());
+    //variables for map and marks
+    var elevator,
+        map,
+        marker,
+        marker2,
+        marker3,
+        marker4,
+        infowindow,
+        xmlhttp,
+        url = "";
+
+    //create the google map
+    map = new google.maps.Map(document.getElementById('map'), {
+        center: {lat: 40.42001542, lng: -86.88123528},
+        zoom: 12
+    });
+    //create a marker at the centre
+    marker = new google.maps.Marker({
+        position: {lat: 40.42001542, lng: -86.88123528},
+        map: map,
+        title: 'Lafayette'
+    });
+
+    infowindow = new google.maps.InfoWindow({
+                            content: ""
+                        });
+    google.maps.event.addListener(marker, 'click', function() {
+        infowindow.setContent("Downtown Lafayette");
+                            infowindow.open(map, marker);
+                        });
+
+
+
+    marker2 = new google.maps.Marker({
+        position: {lat: 40.4233808, lng: -86.9022558},
+        map: map,
+        icon: 'http://google-maps-icons.googlecode.com/files/red' + ('0' + '1').slice(-2) + '.png',
+        title: 'Lafayette'
+    });
+
+    infowindow = new google.maps.InfoWindow({
+                            content: ""
+                        });
+    google.maps.event.addListener(marker2, 'click', function() {
+        infowindow.setContent("C&T Market");
+                            infowindow.open(map, marker2);
+                            $("#sec2").empty();
+                            document.getElementById("market-name").innerHTML = "C&T Market";
+                            document.getElementById("street-name").innerHTML = "360 Brown St, West Lafayette,";
+                            document.getElementById("website").innerHTML = "<a href=\"" + "http://www.yelp.com/biz/c-and-t-market-west-lafayette" + "\">" + "http://www.yelp.com/biz/c-and-t-market-west-lafayette" + "</a>";
+                            document.getElementById("open-status").innerHTML = timeStamp();;
+                            document.getElementById("btn1").disabled = false;
+                            document.getElementById("btn2").disabled = false;
+
+                        });
+
+
+
+
+        marker3 = new google.maps.Marker({
+        position: {lat: 40.4630331, lng: -86.9182977},
+        map: map,
+        icon: 'http://google-maps-icons.googlecode.com/files/red' + ('0' + '2').slice(-2) + '.png',
+        title: 'Lafayette'
+    });
+
+    infowindow = new google.maps.InfoWindow({
+                            content: ""
+                        });
+    google.maps.event.addListener(marker3, 'click', function() {
+      //location.reload();
+
+        infowindow.setContent("West Lafayette Farmers Market");
+                            infowindow.open(map, marker3);
+                            $("#sec2").empty();
+                            document.getElementById("market-name").innerHTML = "West Lafayette Farmers Market";
+                            document.getElementById("street-name").innerHTML = "3065 North Salisbury Street, West Lafayette";
+                            document.getElementById("website").innerHTML = "<a href=\"" + "http://wlfarmersmarket.com/" + "\">" + "http://wlfarmersmarket.com/" + "</a>";
+                            document.getElementById("open-status").innerHTML = timeStamp();;
+                            document.getElementById("btn1").disabled = false;
+                            document.getElementById("btn2").disabled = false;
+//location.reload();
+
+
+                        });
+
+
+
+
+
+
+        marker4 = new google.maps.Marker({
+        position: {lat: 40.4126348, lng: -86.8418076},
+        map: map,
+        icon: 'http://google-maps-icons.googlecode.com/files/red' + ('0' + '3').slice(-2) + '.png',
+        title: 'Lafayette'
+    });
+
+    infowindow = new google.maps.InfoWindow({
+                            content: ""
+                        });
+    google.maps.event.addListener(marker4, 'click', function() {
+      //location.reload();
+
+        infowindow.setContent("Fresh Thyme Farmers Markets");
+                            infowindow.open(map, marker4);
+                            $("#sec2").empty();
+                            document.getElementById("market-name").innerHTML = "Fresh Thyme Farmers Markets";
+                            document.getElementById("street-name").innerHTML = "220 S Creasy Ln, Lafayette, IN 47905";
+                            document.getElementById("website").innerHTML = "<a href=\"" + "http://freshthyme.com/" + "\">" + "http://freshthyme.com/" + "</a>";
+                            document.getElementById("open-status").innerHTML = timeStamp();;
+                            document.getElementById("btn1").disabled = false;
+                            document.getElementById("btn2").disabled = false;
+
+});
+    //create a new httprequest for this session
+    xmlhttp = new XMLHttpRequest();
+    //json format data resource url 
+    //url = "https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20html%20where%20url%3D'http%3A%2F%2Fw1.weather.gov%2Fobhistory%2FKLAF.html'&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys";
+    url = "https://data.cityofchicago.org/api/views/x5xx-pszi/rows.json?accessType=DOWNLOAD";
+    xmlhttp.open("GET", url, true);
+    xmlhttp.send();
+
+    //once the request is accepted, process the fowllowing function to get data and complete the app information
+    xmlhttp.onreadystatechange = function() {
+        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
+            //get the text content from the page response
+            var myArr,
+                text,
+                json,
+                numberOfMarkets = 0,
+                markers = [],
+                boundBox,
+                southWest,
+                northEast,
+                lngSpan = 0,
+                latSpan = 0,
+                locations = [];
+
+            myArr = xmlhttp.responseText;
+            text = myArr;
+            //alert(text);
+            json = JSON.parse(text);
+            
+
+            
+            //alert(json.data[1][1]);
+            //document.getElementById("id01").innerHTML = myArr;
+            
+            //
+            //add the information of the markets here 
+            //
+
+            var i = 0,
+                // 2-level array for washed markets data
+                washedData = [];
+            for (i = 0; i<44; i++) {
+                var dataLine = [];
+                //latitude - 0
+                dataLine.push(json.data[i][18]);
+                //longitude - 1
+                dataLine.push(json.data[i][19]);
+                //name - 2
+                dataLine.push(json.data[i][8]);
+                //street - 3
+                dataLine.push(json.data[i][9]);
+                //day in week - 4
+                dataLine.push(json.data[i][10]);
+                //start time - 5
+                dataLine.push(json.data[i][11]);
+                //end time - 6
+                dataLine.push(json.data[i][12]);
+                //start date -7
+                dataLine.push(json.data[i][13]);
+                //end date - 8
+                dataLine.push(json.data[i][14]);
+                //website - 9
+                dataLine.push(json.data[i][15][0]);
+
+                washedData.push(dataLine);
+            };
+            //alert(washedData);
+            //number of the markets
+            numberOfMarkets = washedData.length;
+
+            //add markers on the map
+            google.maps.event.addListener(map, 'idle', function() {
+            // Create an ElevationService
+            elevator = new google.maps.ElevationService();
+            $.each(markers, function(key, value)
+            {
+                value.setMap(null);
+            });
+            // getting bounds of current location
+            boundBox = map.getBounds();
+            southWest = boundBox.getSouthWest();
+            northEast = boundBox.getNorthEast();
+            lngSpan = northEast.lng() - southWest.lng();
+            latSpan = northEast.lat() - southWest.lat();
+            // adding 20 markers to the map at random locations
+
+            var j = 0,
+                location,
+                positionalRequest,
+                prev_infowindow =false;
+            for (var j = 0; j < numberOfMarkets; j++)
+            {
+                location = new google.maps.LatLng(
+                        southWest.lat() + latSpan * Math.random(),
+                        southWest.lng() + lngSpan * Math.random()
+                        );
+                locations.push(location);
+            }
+
+            // Create a LocationElevationRequest object using the array's one value
+
+            positionalRequest= {
+                'locations': locations
+            };
+            elevator.getElevationForLocations(positionalRequest, function(results, status)
+            {
+                if (status === google.maps.ElevationStatus.OK)
+                {
+                    //if the infowindow is open
+                    prev_infowindow =false;
+
+                    $.each(results, function(key, value) {
+
+                        //alert(key);
+                        markers[key] = new google.maps.Marker({
+                            position: {lat: 41.833392, lng: -88.0123393},
+                            map: map,
+                            icon: 'http://google-maps-icons.googlecode.com/files/red' + ('0' + '1').slice(-2) + '.png'
+                        });
+                        google.maps.event.addListener(markers[key], 'click', function() {
+                            //if another window is open, close it
+                            if( prev_infowindow ) {
+                                prev_infowindow.close();
+                            }
+                            infowindow.setContent(washedData[key][2]);
+                            infowindow.open(map, markers[key]);
+                            //set the menu information about the market
+                            document.getElementById("market-name").innerHTML = "C&T Market";
+                            document.getElementById("street-name").innerHTML = "360 Brown St, West Lafayette,";
+                            //document.getElementById("website").innerHTML = "http://www.yelp.com/biz/c-and-t-market-west-lafayette";
+                            //document.getElementById("open-status").innerHTML = " the market is " + contain(washedData[key][4], day());
+                            document.getElementById("website").innerHTML = "<a href=\"" + "http://www.yelp.com/biz/c-and-t-market-west-lafayette" + "\">" + "http://www.yelp.com/biz/c-and-t-market-west-lafayette" + "</a>";
+
+                            //dtata - scored stores
+                            //you will use scoring algorithm to get these value in the final project
+                            
+                         
+                            //document.getElementById("scores").innerHTML = "The final score for this market is " + parseInt(score(array)*100) + " out of 100";
+                            document.getElementById("comments").innerHTML = "Please find the comments by customers here:";
+
+                            //Options for the Radar chart, other than default
+                           
+
+                            //Call function to draw the Radar chart
+                            //Will expect that data is in %'s
+                            //RadarChart.draw("#chart", d, mycfg);
+                        });
+                        
+                    });
+                }
+            });
+        });
+
+
+        }
+    };
+}
+
+//show the request function in the text format
+function myRequestFunction(arr) {
+        var out = "";
+        var i;
+        for(i = 0; i < arr.length; i++) {
+            out += '<a href="' + arr[i].url + '">' + 
+            arr[i].display + '</a><br>';
+        }
+        document.getElementById("id01").innerHTML = out;
+    }
+// Add a listener for idle event and call getElevation on a random set of marker in the bound
+
+//get the result of whether contains a substring
+function contain(str, substr) {
+    if(str.indexOf(substr) > -1)
+        return "open";
+    else
+        return "closed";
+}
+
+//get the day in a week by the number
+function day() {
+    var d = new Date();
+    var weekday = new Array(7);
+    weekday[0]=  "Sunday";
+    weekday[1] = "Monday";
+    weekday[2] = "Tuesday";
+    weekday[3] = "Wednesday";
+    weekday[4] = "Thursday";
+    weekday[5] = "Friday";
+    weekday[6] = "Saturday";
+
+    return weekday[d.getDay()];
+}
+
+//the algorithm for scoring
+//you should create your own reasonable methods for calculating scores
+//function score(data) {
+    //return data[0]*0.1 + data[2]*0.01 + data[3]*0.11 + data[1]*0.1 + data[4]*0.2 + data[5]*0.1 + data[6]*0.2 + data[7]*0.01 + data[8]*0.01;
+//}
+
+
+function timeStamp() {
+// Create a date object with the current time
+  var now = new Date();
+
+// Create an array with the current month, day and time
+  var date = [ now.getMonth() + 1, now.getDate(), now.getFullYear() ];
+
+// Create an array with the current hour, minute and second
+  var time = [ now.getHours(), now.getMinutes(), now.getSeconds() ];
+
+// Determine AM or PM suffix based on the hour
+  var suffix = ( time[0] < 12 ) ? "AM" : "PM";
+
+// Convert hour from military time
+  time[0] = ( time[0] < 12 ) ? time[0] : time[0] - 12;
+
+// If hour is 0, set it to 12
+  time[0] = time[0] || 12;
+
+// If seconds and minutes are less than 10, add a zero
+  for ( var i = 1; i < 3; i++ ) {
+    if ( time[i] < 10 ) {
+      time[i] = "0" + time[i];
+    }
+  }
+// Return the formatted string
+  return date.join("/") + " " + time.join(":") + " " + suffix;
+}
+
+
+
