diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-pmittal115/README.md b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-pmittal115/README.md
index 565a488..317e619 100644
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-pmittal115/README.md
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-pmittal115/README.md
@@ -2,30 +2,12 @@
 
 Task: Consumers of Greater Lafayette area need to know when to get the cheapest and fresh vegetables and produce from local vendors like local farmer’s markets, Walmart, Pay-Less, Aldi, Meijer, Fresh-Thyme etc. to keep healthy. Consumers are busy too so they do not want to drive far to pick up produce. 
 
-Task statement: Create a website which consumers can use to check prices and freshness of the produce and location of vendor.
-
-Datasets:
-•	Climate Data Online form data.gov (http://www1.ncdc.noaa.gov/pub/orders/cdo/708640.csv)
-•	Produce Prices from usda.gov (https://www.ams.usda.gov/mnreports/fvwretail.pdf)
-•	Lafayette grocery stores locations data (https://www.google.com/maps/search/grocery+stores/@40.4051791,-86.928256,12z/data=!3m1!4b1)
-
-Description:
-•	Google is on left hand side
-•	Information for grocery Store on right side 
-
-Language:
-•	JavaScript
-
-Visualization:
-•	Google map is used
-
-Integration:
-•	Website integrates a mashup
-
-readme file:
-•	readme file has Project information.
-
-Website Testing:
-•	Used Chrome
-
-
+Task statement: Create a website which consumers can use to check prices and freshness of the prodouce and location of vendor.
+
+Requirements:
+Climate Data Online form data.gov (http://www1.ncdc.noaa.gov/pub/orders/cdo/708640.csv);
+Produce Prices from usda.gov (https://www.ams.usda.gov/mnreports/fvwretail.pdf);
+Written in JavaScript language;
+Lafayette grocery stores locations (https://www.google.com/maps/search/grocery+stores/@40.4051791,-86.928256,12z/data=!3m1!4b1)
+Website integrates a mashup;
+Code submission is complemented with a readme file
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-pmittal115/googlemap.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-pmittal115/googlemap.js
index 5ad4152..145c206 100644
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-pmittal115/googlemap.js
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-pmittal115/googlemap.js
@@ -11,28 +11,449 @@ function initMap() {
     var elevator,
         map,
         marker,
+        marker1,
+        marker2,
+        marker3,
+        marker4,
+        marker5,
+        marker6,
+        marker7,
+        marker8,
         infowindow,
         xmlhttp,
         url = "";
 
+
     //create the google map
     map = new google.maps.Map(document.getElementById('map'), {
-        center: {lat: 40.4226506, lng: -86.8843108},
+        center: {lat: 40.4285356, lng: -86.9101571},
         zoom: 13
     });
     //create a marker at the centre
     marker = new google.maps.Marker({
-        position: {lat: 40.4226506, lng: -86.8843108},
+        position: {lat: 40.4285356, lng: -86.9101571},
         map: map,
-        title: 'Lafayette'
+        title: 'West Lafayette'
     });
 
     infowindow = new google.maps.InfoWindow({
                             content: ""
                         });
     google.maps.event.addListener(marker, 'click', function() {
-        infowindow.setContent("Lafayette City");
+        infowindow.setContent("West Lafayette");
                             infowindow.open(map, marker);
                         });
 
+
+
+marker1 = new google.maps.Marker({
+        position: {lat: 40.4325356, lng: -86.9151571}, 
+        map: map,
+        icon: 'http://google-maps-icons.googlecode.com/files/red' + ('0' + '1').slice(-2) + '.png',
+        title: 'Fresh City Market'
+    });
+
+
+    infowindow = new google.maps.InfoWindow({
+                            content: ""
+                        });
+    google.maps.event.addListener(marker1, 'click', function() {
+        infowindow.setContent("Fresh City Market");
+                            infowindow.open(map, marker1);
+
+                            document.getElementById("market-name").innerHTML = "Fresh City Market";
+                            document.getElementById("street-name").innerHTML = "720 Northwestern Ave, West Lafayette, IN 47906";
+                            document.getElementById("website").innerHTML = "<a href=\"" + "http://www.yelp.com/biz/fresh-city-market-west-lafayette?osq=grocery+store" + "\">" + "http://www.yelp.com/biz/fresh-city-market-west-lafayette?osq=grocery+store" + "</a>";
+                            document.getElementById("open-status").innerHTML = timeStamp();
+
+                        });
+
+
+
+
+marker2 = new google.maps.Marker({
+        position: {lat: 40.45184734049178, lng: -86.91469666821289},
+        map: map,
+        icon: 'http://google-maps-icons.googlecode.com/files/red' + ('0' + '2').slice(-2) + '.png',
+        title: 'Marsh Supermarkets'
+    });
+
+    infowindow = new google.maps.InfoWindow({
+                            content: ""
+                        });
+    google.maps.event.addListener(marker2, 'click', function() {
+      //location.reload();
+
+        infowindow.setContent("Marsh Supermarkets");
+                            infowindow.open(map, marker2);
+
+                            document.getElementById("market-name").innerHTML = "Marsh Supermarkets";
+                            document.getElementById("street-name").innerHTML = "2410 North Salisbury Street, West Lafayette, IN 47906";
+                            document.getElementById("website").innerHTML = "<a href=\"" + "http://www.yelp.com/biz/marsh-supermarkets-west-lafayette" + "\">" + "http://www.yelp.com/biz/marsh-supermarkets-west-lafayette" + "</a>";
+                            document.getElementById("open-status").innerHTML = timeStamp();;
+//location.reload();
+
+
+                        });
+
+
+marker3 = new google.maps.Marker({
+        position: {lat: 40.45354734049190, lng: -86.91719666821333}, 
+        map: map,
+        icon: 'http://google-maps-icons.googlecode.com/files/red' + ('0' + '3').slice(-2) + '.png',
+        title: 'Pay Less Super Market'
+    });
+
+
+    infowindow = new google.maps.InfoWindow({
+                            content: ""
+                        });
+    google.maps.event.addListener(marker3, 'click', function() {
+        infowindow.setContent("Pay Less Super Market");
+                            infowindow.open(map, marker3);
+
+                            document.getElementById("market-name").innerHTML = "Pay Less Super Market";
+                            document.getElementById("street-name").innerHTML = "1032 Sagamore Pkwy West, West Lafayette, IN 47906";
+                            document.getElementById("website").innerHTML = "<a href=\"" + "http://www.yelp.com/biz/pay-less-super-markets-west-lafayette" + "\">" + "http://www.yelp.com/biz/pay-less-super-markets-west-lafayette" + "</a>";
+                            document.getElementById("open-status").innerHTML = timeStamp();;
+
+                        });
+
+
+
+marker4 = new google.maps.Marker({
+        position: {lat: 40.4630331, lng: -86.9182977},
+        map: map,
+        icon: 'http://google-maps-icons.googlecode.com/files/red' + ('0' + '4').slice(-2) + '.png',
+        title: 'West Lafayette Farmers Market'
+    });
+
+    infowindow = new google.maps.InfoWindow({
+                            content: ""
+                        });
+    google.maps.event.addListener(marker4, 'click', function() {
+      //location.reload();
+
+        infowindow.setContent("West Lafayette Farmers Market");
+                            infowindow.open(map, marker4);
+
+                            document.getElementById("market-name").innerHTML = "West Lafayette Farmers Market";
+                            document.getElementById("street-name").innerHTML = "3065 North Salisbury Street, West Lafayette, IN 47906";
+                            document.getElementById("website").innerHTML = "<a href=\"" + "http://wlfarmersmarket.com/" + "\">" + "http://wlfarmersmarket.com/" + "</a>";
+                            document.getElementById("open-status").innerHTML = timeStamp();;
+//location.reload();
+
+
+                        });
+
+
+
+        marker5 = new google.maps.Marker({
+        position: {lat: 40.4578398, lng: -86.9332058},
+        map: map,
+        icon: 'http://google-maps-icons.googlecode.com/files/red' + ('0' + '5').slice(-2) + '.png',
+        title: 'Walmart Supercenter'
+    });
+
+    infowindow = new google.maps.InfoWindow({
+                            content: ""
+                        });
+    google.maps.event.addListener(marker5, 'click', function() {
+      //location.reload();
+
+        infowindow.setContent("Walmart Supercenter");
+                            infowindow.open(map, marker5);
+
+                            document.getElementById("market-name").innerHTML = "Walmart Supercenter";
+                            document.getElementById("street-name").innerHTML = "2801 Northwestern Ave, West Lafayette, IN 47906";
+                            //document.getElementById("phone-number").innerHTML = "(765) 463-0201";
+                            document.getElementById("website").innerHTML = "<a href=\"" + "http://www.yelp.com/biz/walmart-supercenter-west-lafayette" + "\">" + "http://www.yelp.com/biz/walmart-supercenter-west-lafayette" + "</a>";
+                            document.getElementById("open-status").innerHTML = timeStamp();;
+                            //document.getElementById("scores").innerHTML = timeStamp();
+
+});
+
+
+        marker6 = new google.maps.Marker({
+        position: {lat: 40.4695439, lng: -86.9554979},
+        map: map,
+        icon: 'http://google-maps-icons.googlecode.com/files/red' + ('0' + '6').slice(-2) + '.png',
+        title: 'Meijer'
+    });
+
+    infowindow = new google.maps.InfoWindow({
+                            content: ""
+                        });
+    google.maps.event.addListener(marker6, 'click', function() {
+      //location.reload();
+
+        infowindow.setContent("Meijer");
+                            infowindow.open(map, marker6);
+
+                            document.getElementById("market-name").innerHTML = "Meijer";
+                            document.getElementById("street-name").innerHTML = "2636 US-52, W Lafayette, IN 47906";
+                            //document.getElementById("phone-number").innerHTML = "(765) 637-4200";
+                            document.getElementById("website").innerHTML = "<a href=\"" + "http://www.yelp.com/biz/meijer-west-lafayette" + "\">" + "http://www.yelp.com/biz/meijer-west-lafayette" + "</a>";
+                            document.getElementById("open-status").innerHTML = timeStamp();;
+                            //document.getElementById("scores").innerHTML = timeStamp();
+
+});
+
+
+        marker7 = new google.maps.Marker({
+        position: {lat: 40.4126348, lng: -86.8418076},
+        map: map,
+        icon: 'http://google-maps-icons.googlecode.com/files/red' + ('0' + '7').slice(-2) + '.png',
+        title: 'Fresh Thyme Farmer Market'
+    });
+
+    infowindow = new google.maps.InfoWindow({
+                            content: ""
+                        });
+    google.maps.event.addListener(marker7, 'click', function() {
+      //location.reload();
+
+        infowindow.setContent("Fresh Thyme Farmer Market");
+                            infowindow.open(map, marker7);
+
+                            document.getElementById("market-name").innerHTML = "Fresh Thyme Farmer Market";
+                            document.getElementById("street-name").innerHTML = "220 S Creasy Ln, Lafayette, IN 47905";
+                            //document.getElementById("phone-number").innerHTML = "(765) 588-4383";
+                            document.getElementById("website").innerHTML = "<a href=\"" + "http://www.yelp.com/biz/fresh-thyme-farmers-market-lafayette-lafayette" + "\">" + "http://www.yelp.com/biz/fresh-thyme-farmers-market-lafayette-lafayette" + "</a>";
+                            document.getElementById("open-status").innerHTML = timeStamp();;
+                            //document.getElementById("scores").innerHTML = timeStamp();
+
+});
+
+
+ //create a new httprequest for this session
+    xmlhttp = new XMLHttpRequest();
+    //json format data resource url 
+    //url = "https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20html%20where%20url%3D'http%3A%2F%2Fw1.weather.gov%2Fobhistory%2FKLAF.html'&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys";
+    url = "https://data.cityofchicago.org/api/views/x5xx-pszi/rows.json?accessType=DOWNLOAD";
+    xmlhttp.open("GET", url, true);
+    xmlhttp.send();
+
+    //once the request is accepted, process the fowllowing function to get data and complete the app information
+    xmlhttp.onreadystatechange = function() {
+        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
+            //get the text content from the page response
+            var myArr,
+                text,
+                json,
+                numberOfMarkets = 0,
+                markers = [],
+                boundBox,
+                southWest,
+                northEast,
+                lngSpan = 0,
+                latSpan = 0,
+                locations = [];
+
+            myArr = xmlhttp.responseText;
+            text = myArr;
+            //alert(text);
+            json = JSON.parse(text);
+            
+
+            
+            //alert(json.data[1][1]);
+            //document.getElementById("id01").innerHTML = myArr;
+            
+            //
+            //add the information of the markets here 
+            //
+
+            var i = 0,
+                // 2-level array for washed markets data
+                washedData = [];
+            for (i = 0; i<44; i++) {
+                var dataLine = [];
+                //latitude - 0
+                dataLine.push(json.data[i][18]);
+                //longitude - 1
+                dataLine.push(json.data[i][19]);
+                //name - 2
+                dataLine.push(json.data[i][8]);
+                //street - 3
+                dataLine.push(json.data[i][9]);
+                //day in week - 4
+                dataLine.push(json.data[i][10]);
+                //start time - 5
+                dataLine.push(json.data[i][11]);
+                //end time - 6
+                dataLine.push(json.data[i][12]);
+                //start date -7
+                dataLine.push(json.data[i][13]);
+                //end date - 8
+                dataLine.push(json.data[i][14]);
+                //website - 9
+                dataLine.push(json.data[i][15][0]);
+
+                washedData.push(dataLine);
+            };
+            //alert(washedData);
+            //number of the markets
+            numberOfMarkets = washedData.length;
+
+            //add markers on the map
+            google.maps.event.addListener(map, 'idle', function() {
+            // Create an ElevationService
+            elevator = new google.maps.ElevationService();
+            $.each(markers, function(key, value)
+            {
+                value.setMap(null);
+            });
+            // getting bounds of current location
+            boundBox = map.getBounds();
+            southWest = boundBox.getSouthWest();
+            northEast = boundBox.getNorthEast();
+            lngSpan = northEast.lng() - southWest.lng();
+            latSpan = northEast.lat() - southWest.lat();
+            // adding 20 markers to the map at random locations
+
+            var j = 0,
+                location,
+                positionalRequest,
+                prev_infowindow =false;
+            for (var j = 0; j < numberOfMarkets; j++)
+            {
+                location = new google.maps.LatLng(
+                        southWest.lat() + latSpan * Math.random(),
+                        southWest.lng() + lngSpan * Math.random()
+                        );
+                locations.push(location);
+            }
+
+            // Create a LocationElevationRequest object using the array's one value
+
+            positionalRequest= {
+                'locations': locations
+            };
+            elevator.getElevationForLocations(positionalRequest, function(results, status)
+            {
+                if (status === google.maps.ElevationStatus.OK)
+                {
+                    //if the infowindow is open
+                    prev_infowindow =false;
+
+                    $.each(results, function(key, value) {
+
+                        //alert(key);
+                        markers[key] = new google.maps.Marker({
+                            position: {lat: 41.833392, lng: -88.0123393},
+                            map: map,
+                            icon: 'http://google-maps-icons.googlecode.com/files/red' + ('0' + '1').slice(-2) + '.png'
+                        });
+                        google.maps.event.addListener(markers[key], 'click', function() {
+                            //if another window is open, close it
+                            if( prev_infowindow ) {
+                                prev_infowindow.close();
+                            }
+                            infowindow.setContent(washedData[key][2]);
+                            infowindow.open(map, markers[key]);
+                            //set the menu information about the market
+                            document.getElementById("market-name").innerHTML = "Fresh City Market";
+                            document.getElementById("street-name").innerHTML = "720 Northwestern Ave, West Lafayette, IN 47906";
+                            //document.getElementById("website").innerHTML = "hhttp://www.yelp.com/biz/fresh-city-market-west-lafayette?osq=grocery+store";
+                            //document.getElementById("open-status").innerHTML = " the market is " + contain(washedData[key][4], day());
+                            document.getElementById("website").innerHTML = "<a href=\"" + "http://www.yelp.com/biz/fresh-city-market-west-lafayette?osq=grocery+store" + "\">" + "http://www.yelp.com/biz/fresh-city-market-west-lafayette?osq=grocery+store" + "</a>";
+
+                            //dtata - scored stores
+                            //you will use scoring algorithm to get these value in the final project
+                            
+                         
+                            //document.getElementById("scores").innerHTML = "The final score for this market is " + parseInt(score(array)*100) + " out of 100";
+                            document.getElementById("comments").innerHTML = "Please find the comments by customers here:";
+
+                            //Options for the Radar chart, other than default
+                           
+
+                            //Call function to draw the Radar chart
+                            //Will expect that data is in %'s
+                            //RadarChart.draw("#chart", d, mycfg);
+                        });
+                        
+                    });
+                }
+            });
+        });
+
+
+        }
+    };
+}
+
+//show the request function in the text format
+function myRequestFunction(arr) {
+        var out = "";
+        var i;
+        for(i = 0; i < arr.length; i++) {
+            out += '<a href="' + arr[i].url + '">' + 
+            arr[i].display + '</a><br>';
+        }
+        document.getElementById("id01").innerHTML = out;
+    }
+// Add a listener for idle event and call getElevation on a random set of marker in the bound
+
+//get the result of whether contains a substring
+function contain(str, substr) {
+    if(str.indexOf(substr) > -1)
+        return "open";
+    else
+        return "closed";
+}
+
+//get the day in a week by the number
+function day() {
+    var d = new Date();
+    var weekday = new Array(7);
+    weekday[0]=  "Sunday";
+    weekday[1] = "Monday";
+    weekday[2] = "Tuesday";
+    weekday[3] = "Wednesday";
+    weekday[4] = "Thursday";
+    weekday[5] = "Friday";
+    weekday[6] = "Saturday";
+
+    return weekday[d.getDay()];
+}
+
+//the algorithm for scoring
+//you should create your own reasonable methods for calculating scores
+//function score(data) {
+    //return data[0]*0.1 + data[2]*0.01 + data[3]*0.11 + data[1]*0.1 + data[4]*0.2 + data[5]*0.1 + data[6]*0.2 + data[7]*0.01 + data[8]*0.01;
+//}
+
+
+function timeStamp() {
+// Create a date object with the current time
+  var now = new Date();
+
+// Create an array with the current month, day and time
+  var date = [ now.getMonth() + 1, now.getDate(), now.getFullYear() ];
+
+// Create an array with the current hour, minute and second
+  var time = [ now.getHours(), now.getMinutes(), now.getSeconds() ];
+
+// Determine AM or PM suffix based on the hour
+  var suffix = ( time[0] < 12 ) ? "AM" : "PM";
+
+// Convert hour from military time
+  time[0] = ( time[0] < 12 ) ? time[0] : time[0] - 12;
+
+// If hour is 0, set it to 12
+  time[0] = time[0] || 12;
+
+// If seconds and minutes are less than 10, add a zero
+  for ( var i = 1; i < 3; i++ ) {
+    if ( time[i] < 10 ) {
+      time[i] = "0" + time[i];
+    }
+  }
+// Return the formatted string
+  return date.join("/") + " " + time.join(":") + " " + suffix;
+
+
+
 }
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-pmittal115/index.html b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-pmittal115/index.html
index 638075a..5d33f1f 100644
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-pmittal115/index.html
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-pmittal115/index.html
@@ -1,6 +1,5 @@
 <!DOCTYPE html>
-<!DOCTYPE html>
-<!-- I used Charles's template to work on this project.-->
+<!-- Index page info.-->
 <html>
   <head>
 	<meta charset="UTF-8">
@@ -13,35 +12,141 @@
 	<script src="mapInfo.js"></script>
 	<script src="googlemap.js" type="text/javascript"></script>
 	<script src="scriptInfo.js" type="text/javascript"></script>
+
+ <link href='http://fonts.googleapis.com/css?family=Source+Sans+Pro:200,600,200italic,600italic&subset=latin,vietnamese' rel='stylesheet' type='text/css'>
+
+  <script src="http://phuonghuynh.github.io/js/bower_components/jquery/dist/jquery.min.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/d3/d3.min.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/d3-transform/src/d3-transform.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/cafej/src/extarray.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/cafej/src/misc.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/cafej/src/micro-observer.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/microplugin/src/microplugin.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/bubble-chart/src/bubble-chart.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/bubble-chart/src/plugins/central-click/central-click.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/bubble-chart/src/plugins/lines/lines.js"></script>
   </head>
   
   <body>
 
-	<div id="header">
+
+	<div id="map">
 		</div>
-	<div id="content">
+
+
+	<!--<div id="content">-->
 
 		   <div id="side-menu" class="menu-line">
 			<div id="menu-cover" class="menu-line">
+				<div id="basic-info" class="menu-line">
+
+                               <div id="info"><h2>Store Information:</h2></div>
+<div id="info"><h3>Click on the map to get the detail about the store.</h3></div>
+					<!--<div id="weather" class="menu-line">sunny!</div>-->
+					<div id="sec2" class="bubbleChart"></div>
 
-					<div id="Grocery Store" class="menu-line" data-position="center">
-                                           <h1>Fresh Produce</h1>
+				<!--</div>-->
+				<div id="position-info">
+					<div id="market" class="menu-line">
+						<h3><u><div id="market-name" class="test"></div></u></h3>
+						<!--<div id="website" class="test"></div>-->
 					</div>
-					<section class="main">
-				     <div class="wrapper-demo">
+					<!--<div id="website" class="menu-line"></div>-->
+					<div id="street-name" class="menu-line"></div>
+					<!--<button class="button" onclick="myFunction()">Overview of the market (score out of 100):</button>-->
+
 <a class="thumbnail"  data-position="center"><img src="produce.jpg" alt="" /></a>
-					 </div>
-					 <div>
-					 <ul>
-					   <li><a href="http://www.marsh.net/" alt="" />Marsh</a></li>
-					   <li><a href="https://www.pay-less.com/" alt="" />Payless</a></li>
-					   <li><a href="https://www.aldi.us/en/?pk_campaign=brandedsem" alt="" />ALDI</a></li>
-					   <li><a href="http://freshcitymarket.com/" alt="" />Fresh City Market</a></li>
-					   <li><a href="http://www.walmart.com/?adid=22222222220220085369&wmlspartner=wmtlabs&wl0=e&wl1=g&wl2=c&wl3=74935550929&wl4=kwd-27665750&wl5=1017156&veh=sem" alt="" />Walmart</a></li>
-					   <li><a href="https://www.meijer.com/" alt="" />Meijer</a></li>
-					 </ul>
-					 </div>
-				    </section>
+					<script>					
+
+
+function myFunction() {
+	// var x = document.getElementById("sec2");
+ //  x.remove("bubbleChart");
+ $("#sec2").empty();
+    $(document).ready(function () {
+    	bubbleChart = new d3.svg.BubbleChart({
+    supportResponsive: true,
+    //container: => use @default
+    size: 600,
+    //viewBoxSize: => use @default
+    innerRadius: 600 / 3.5,
+    //outerRadius: => use @default
+    radiusMin: 50,
+    //radiusMax: use @default
+    //intersectDelta: use @default
+    //intersectInc: use @default
+//circleColor: use @default
+    data: {
+      items: [
+        {text: "Price", count: Math.round(100 * Math.random()+1)},
+        {text: "Distance to Downtown", count: Math.round(100 * Math.random()+1)},
+        {text: "Freshness", count: Math.round(100 * Math.random()+1)},
+        {text: "Distance to Purdue", count: Math.round(100 * Math.random()+1)},
+        {text: "Service", count: Math.round(100 * Math.random()+1)},
+        {text: "Open Hours", count: Math.round(100 * Math.random()+1)},
+        {text: "Rating", count: Math.round(100 * Math.random()+1)},
+        {text: "Kinds of Vegetables", count: Math.round(100 * Math.random()+1)},
+        {text: "Others", count: Math.round(100 * Math.random()+1)},
+      ],
+      eval: function (item) {return item.count;},
+      classed: function (item) {return item.text.split(" ").join("");}
+    },
+    plugins: [
+    
+      {
+        name: "lines",
+        options: {
+          format: [
+            {// Line #0
+              textField: "count",
+              classed: {count: true},
+              style: {
+                "font-size": "28px",
+                "font-family": "Source Sans Pro, sans-serif",
+                "text-anchor": "middle",
+                fill: "white"
+              },
+              attr: {
+                dy: "0px",
+                x: function (d) {return d.cx;},
+                y: function (d) {return d.cy;}
+              }
+            },
+            {// Line #1
+              textField: "text",
+              classed: {text: true},
+              style: {
+                "font-size": "14px",
+                "font-family": "Source Sans Pro, sans-serif",
+                "text-anchor": "middle",
+                fill: "white"
+ },
+              attr: {
+                dy: "20px",
+                x: function (d) {return d.cx;},
+                y: function (d) {return d.cy;}
+              }
+            }
+          ],
+          centralFormat: [
+            {// Line #0
+              style: {"font-size": "50px"},
+              attr: {}
+            },
+            {// Line #1
+              style: {"font-size": "30px"},
+              attr: {dy: "40px"}
+            }
+          ]
+        }
+      }]
+  });
+});
+}
+</script>
+
+
+
 
 			</div>
 		</div>
@@ -57,7 +162,8 @@
 
 
 	
-	<a title="Real Time Analytics" href="http://clicky.com/100881512"><img alt="Real Time Analytics" src="//static.getclicky.com/media/links/badge.gif" border="0" /></a>
+<!--<a title="Real Time Analytics" href="http://clicky.com/100881512"><img alt="Real Time Analytics" src="//static.getclicky.com/media/links/badge.gif" border="0" /></a>-->
+
 <script src="//static.getclicky.com/js" type="text/javascript"></script>
 <script type="text/javascript">try{ clicky.init(100881512); }catch(e){}</script>
 <noscript><p><img alt="Clicky" width="1" height="1" src="//in.getclicky.com/100881512ns.gif" /></p></noscript>
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-pmittal115/mapInfo.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-pmittal115/mapInfo.js
new file mode 100644
index 0000000..752971d
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase3/2016greenironhack-pmittal115/mapInfo.js
@@ -0,0 +1,242 @@
+/**
+This information is for the chart. Other information will be in scriptInfo.js file.
+**/
+
+// basic parameters for a radar chart template
+var RadarChart = {
+	//id is the ID for the chart in HTML
+	//d is the data stored for presenting
+	//options a potential styles for the chart
+  	draw: function(id, d, options){
+  		var cfg,
+  			g,
+  			allAxis,
+  			total,
+  			radius,
+  			Format,
+  			tooltip,
+  			axis;
+
+	  	//basic parameters for a frame of Radar Chart
+	  	cfg = {
+			radius: 5,
+			w: 500,
+			h: 500,
+			factor: 1,
+			factortitle: .85,
+			levels: 3,
+			maxValue: 0,
+			radians: 2 * Math.PI,
+			opacityArea: 0.5,
+			ToRight: 5,
+			TranslateX: 80,
+			TranslateY: 30,
+			ExtraWidthX: 100,
+			ExtraWidthY: 100,
+			color: d3.scale.category10()
+		};
+		
+		//if there is no definition for the style of the chart, we will use the first model by default
+		if('undefined' !== typeof options){
+		  for(var i in options){
+			if('undefined' !== typeof options[i]){
+			  cfg[i] = options[i];
+			}
+		  }
+		}
+
+		//get the max value for showing in percentage
+		cfg.maxValue = Math.max(cfg.maxValue, d3.max(d, function(i){return d3.max(i.map(function(o){return o.value;}))}));
+		//get all the axis and lines for the chart template
+		allAxis = (d[0].map(function(i, j){return i.axis}));
+		total = allAxis.length;
+		radius = cfg.factor*Math.min(cfg.w/2, cfg.h/2);
+		Format = d3.format('%');
+		d3.select(id).select("svg").remove();
+		
+		//set the final position information for the chart area
+		g = d3.select(id)
+				.append("svg")
+				.attr("width", cfg.w+cfg.ExtraWidthX)
+				.attr("height", cfg.h+cfg.ExtraWidthY)
+				.append("g")
+				.attr("transform", "translate(" + cfg.TranslateX + "," + cfg.TranslateY + ")");
+				;
+		//variable for showing tips while mouse moving on
+		tooltip;
+		
+		//Circular segments
+		var j = 0;
+		var levelFactor
+		for(j=0; j<cfg.levels-1; j++){
+		    levelFactor = cfg.factor*radius*((j+1)/cfg.levels);
+		    g.selectAll(".levels")
+			   .data(allAxis)
+			   .enter()
+			   .append("svg:line")
+			   .attr("x1", function(d, i){return levelFactor*(1-cfg.factor*Math.sin(i*cfg.radians/total));})
+			   .attr("y1", function(d, i){return levelFactor*(1-cfg.factor*Math.cos(i*cfg.radians/total));})
+			   .attr("x2", function(d, i){return levelFactor*(1-cfg.factor*Math.sin((i+1)*cfg.radians/total));})
+			   .attr("y2", function(d, i){return levelFactor*(1-cfg.factor*Math.cos((i+1)*cfg.radians/total));})
+			   .attr("class", "line")
+			   .style("stroke", "grey")
+			   .style("stroke-opacity", "0.75")
+			   .style("stroke-width", "0.3px")
+			   .attr("transform", "translate(" + (cfg.w/2-levelFactor) + ", " + (cfg.h/2-levelFactor) + ")");
+		}
+
+		//Text indicating at what % each level is
+		var j = 0;
+		var levelFactor
+		for(j=0; j<cfg.levels; j++){
+		    levelFactor = cfg.factor*radius*((j+1)/cfg.levels);
+		    g.selectAll(".levels")
+			   .data([1]) //dummy data
+			   .enter()
+			   .append("svg:text")
+			   .attr("x", function(d){return levelFactor*(1-cfg.factor*Math.sin(0));})
+			   .attr("y", function(d){return levelFactor*(1-cfg.factor*Math.cos(0));})
+			   .attr("class", "title")
+			   .style("font-family", "sans-serif")
+			   .style("font-size", "12px")
+			   .attr("transform", "translate(" + (cfg.w/2-levelFactor + cfg.ToRight) + ", " + (cfg.h/2-levelFactor) + ")")
+			   .attr("fill", "#737373")
+			   .text(Format((j+1)*cfg.maxValue/cfg.levels));
+		}
+		
+		series = 0;
+
+		//define all the axis in the chart as class "axis"
+		axis = g.selectAll(".axis")
+				.data(allAxis)
+				.enter()
+				.append("g")
+				.attr("class", "axis");
+
+		//define all the lines in the chart as class "line"
+		axis.append("line")
+			.attr("x1", cfg.w/2)
+			.attr("y1", cfg.h/2)
+			.attr("x2", function(d, i){return cfg.w/2*(1-cfg.factor*Math.sin(i*cfg.radians/total));})
+			.attr("y2", function(d, i){return cfg.h/2*(1-cfg.factor*Math.cos(i*cfg.radians/total));})
+			.attr("class", "line")
+			.style("stroke", "grey")
+			.style("stroke-width", "1px");
+
+		//define all the title in the chart as class "title"
+		axis.append("text")
+			.attr("class", "title")
+			.text(function(d){return d})
+			.style("font-family", "sans-serif")
+			.style("font-size", "12px")
+			.attr("text-anchor", "middle")
+			.attr("dy", "1.5em")
+			.attr("transform", function(d, i){return "translate(0, -10)"})
+			.attr("x", function(d, i){return cfg.w/2*(1-cfg.factortitle*Math.sin(i*cfg.radians/total))-60*Math.sin(i*cfg.radians/total);})
+			.attr("y", function(d, i){return cfg.h/2*(1-Math.cos(i*cfg.radians/total))-20*Math.cos(i*cfg.radians/total);});
+
+	 	//create nodes for each point for scores
+		d.forEach(function(y, x){
+		    dataValues = [];
+		    g.selectAll(".nodes")
+				.data(y, function(j, i){
+				  dataValues.push([
+					cfg.w/2*(1-(parseFloat(Math.max(j.value, 0))/cfg.maxValue)*cfg.factor*Math.sin(i*cfg.radians/total)), 
+					cfg.h/2*(1-(parseFloat(Math.max(j.value, 0))/cfg.maxValue)*cfg.factor*Math.cos(i*cfg.radians/total))
+				  ]);
+				});
+		  	dataValues.push(dataValues[0]);
+		  	g.selectAll(".area")
+				 .data([dataValues])
+				 .enter()
+				 .append("polygon")
+				 .attr("class", "radar-chart-serie"+series)
+				 .style("stroke-width", "2px")
+				 .style("stroke", cfg.color(series))
+				 .attr("points",function(d) {
+					 var str="";
+					 var pti = 0;
+					 for(pti=0;pti<d.length;pti++){
+						 str=str+d[pti][0]+","+d[pti][1]+" ";
+					 }
+					 return str;
+				  })
+				 .style("fill", function(j, i){return cfg.color(series)})
+				 .style("fill-opacity", cfg.opacityArea)
+				 .on('mouseover', function (d){
+									z = "polygon."+d3.select(this).attr("class");
+									g.selectAll("polygon")
+									 .transition(200)
+									 .style("fill-opacity", 0.1); 
+									g.selectAll(z)
+									 .transition(200)
+									 .style("fill-opacity", .7);
+								  })
+				 .on('mouseout', function(){
+									g.selectAll("polygon")
+									 .transition(200)
+									 .style("fill-opacity", cfg.opacityArea);
+				 });
+		  series++;
+		});
+		series=0;
+
+		//create basic lines for rader chart frame
+		d.forEach(function(y, x){
+		    g.selectAll(".nodes")
+				.data(y).enter()
+				.append("svg:circle")
+				.attr("class", "radar-chart-serie"+series)
+				.attr('r', cfg.radius)
+				.attr("alt", function(j){return Math.max(j.value, 0)})
+				.attr("cx", function(j, i){
+				  	dataValues.push([
+						cfg.w/2*(1-(parseFloat(Math.max(j.value, 0))/cfg.maxValue)*cfg.factor*Math.sin(i*cfg.radians/total)), 
+						cfg.h/2*(1-(parseFloat(Math.max(j.value, 0))/cfg.maxValue)*cfg.factor*Math.cos(i*cfg.radians/total))
+					]);
+					return cfg.w/2*(1-(Math.max(j.value, 0)/cfg.maxValue)*cfg.factor*Math.sin(i*cfg.radians/total));
+				})
+				.attr("cy", function(j, i){
+			  		return cfg.h/2*(1-(Math.max(j.value, 0)/cfg.maxValue)*cfg.factor*Math.cos(i*cfg.radians/total));
+				})
+				.attr("data-id", function(j){return j.axis})
+				.style("fill", cfg.color(series)).style("fill-opacity", .9)
+				.on('mouseover', function (d){
+					newX =  parseFloat(d3.select(this).attr('cx')) - 10;
+					newY =  parseFloat(d3.select(this).attr('cy')) - 5;
+					
+					tooltip
+						.attr('x', newX)
+						.attr('y', newY)
+						.text(Format(d.value))
+						.transition(200)
+						.style('opacity', 1);
+						
+					z = "polygon."+d3.select(this).attr("class");
+					g.selectAll("polygon")
+						.transition(200)
+						.style("fill-opacity", 0.1); 
+					g.selectAll(z)
+						.transition(200)
+						.style("fill-opacity", .7);
+				})
+				.on('mouseout', function(){
+					tooltip
+						.transition(200)
+						.style('opacity', 0);
+					g.selectAll("polygon")
+						.transition(200)
+						.style("fill-opacity", cfg.opacityArea);
+				})
+				.append("svg:title")
+				.text(function(j){return Math.max(j.value, 0)});
+
+		  	series++;
+		});
+		//Tooltip
+		tooltip = g.append('text')
+				   .style('opacity', 0)
+				   .style('font-family', 'sans-serif')
+				   .style('font-size', '13px');
+	}
+};
