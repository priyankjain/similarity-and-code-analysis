diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/background.jpeg b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/background.jpeg
new file mode 100644
index 0000000..f7d6490
Binary files /dev/null and b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/background.jpeg differ
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/speedMode.css b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/speedMode.css
new file mode 100644
index 0000000..b446460
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/speedMode.css
@@ -0,0 +1,50 @@
+        .unselectable {
+            -moz-user-select: -moz-none;
+            -khtml-user-select: none;
+            -webkit-user-select: none;
+            -ms-user-select: none;
+            user-select: none;
+        }
+
+        /* css formats for the gauge */
+        .gauge .domain {
+            stroke-width: 2px;
+            stroke: #fff;
+        }
+
+        .gauge .tick line {
+            stroke: #fff;
+            stroke-width: 2px;
+        }
+        
+        .gauge line {
+            stroke: #fff;
+        }
+
+        .gauge .arc, .gauge .cursor {
+            opacity: 0.8;
+        }
+
+        .gauge .major {
+            fill: #fff;
+            font-size: 20px;
+            font-family: 'Play', verdana, sans-serif;
+            font-weight: normal;
+        }
+        
+        .gauge .indicator {
+            stroke: #EE3311;
+            fill: #000;
+            stroke-width: 4px;
+        }
+
+        /* css formats for the segment display */
+        .segdisplay .on {
+            fill: #FF0000;
+
+        }
+
+        .segdisplay .off {
+            fill: #FF0000;
+            opacity: 0.1;
+        }
\ No newline at end of file
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/startPage.css b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/startPage.css
new file mode 100644
index 0000000..a0774b8
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/startPage.css
@@ -0,0 +1,90 @@
+/*
+This is the tutorial project for 2015-fall Purdue Ironhack, which is organized by Reserach Center of Open Digital Innovation(RCODI) at Purdue University. 
+If you want to know more about the Ironhack or about the RCODI, please find our website here: https://www.purdue.edu/opendigital/
+You can checkout the code for this project on github: https://github.com/charlessong0/2015-Purdue-Ironhack
+The demo page of this project is located at: http://test.rcodi.charlessong.me/
+*/
+
+/* make the body div cover the whole page */
+html, body { 
+height: 100%; 
+margin: 12; 
+padding: 0; 
+background-image: url("background.jpeg");
+background-repeat: no-repeat;
+background-position: bottom;
+-webkit-background-size: 1400px 1400px;
+}
+
+/* use "#" for ids and use "." for classes
+usually an id in unique in one html page*/
+#header {
+    background-color:green;
+    text-align:center;
+    padding:5px;
+}
+
+h1 {
+    color: red;
+    font-style: oblique;
+    font-size: 333%;
+}
+
+h3 {
+    color: red;
+    font-size: 160%;
+}
+
+p{
+	text-decoration: underline;
+	font-size: 120%;
+	color:white;
+}
+
+img {
+    opacity: 0.8;
+    width:350px;
+    height:250px
+}
+
+
+#sec1{
+	position: absolute;
+	left: 4%;
+	top:45%;
+}
+
+#sec2{
+	position: absolute;
+	left: 72%;
+	top: 45%;
+}
+
+#sec3{
+	position: absolute;
+	left: 27%;
+	top: 38%;
+}
+
+#sec4{
+	position: absolute;
+	left: 36%;
+	top: 75%;
+}
+
+#sec5{
+	position: absolute;
+	left: 51%;
+	top: 43%;
+
+}
+
+#sec6{
+	position: absolute;
+	left: 19%;
+	top: 93%;
+
+}
+
+
+
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/tutorial.css b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/tutorial.css
new file mode 100644
index 0000000..2c799aa
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/css/tutorial.css
@@ -0,0 +1,129 @@
+/*
+This is the tutorial project for 2015-fall Purdue Ironhack, which is organized by Reserach Center of Open Digital Innovation(RCODI) at Purdue University. 
+If you want to know more about the Ironhack or about the RCODI, please find our website here: https://www.purdue.edu/opendigital/
+You can checkout the code for this project on github: https://github.com/charlessong0/2015-Purdue-Ironhack
+The demo page of this project is located at: http://test.rcodi.charlessong.me/
+*/
+
+/* make the body div cover the whole page */
+html, body { 
+height: 100%; 
+margin: 12; 
+padding: 0; 
+}
+
+.bubbleChart {
+	min-width: 100px;
+	max-width: 800px;
+	height: 500px;
+	margin: 0 auto;
+}
+
+/* use "#" for ids and use "." for classes
+usually an id in unique in one html page*/
+#header {
+    background-color:green;
+    text-align:center;
+    padding:5px;
+}
+
+h1 {
+    color: red;
+    font-style: oblique;
+    font-size: 333%;
+}
+
+#title{
+	font-size: 120%;
+	color:white;
+}
+
+#map{
+	/* here we use absolute layout to find the position for google map
+	you may want to use relative rather than absolute in your own application */
+	position: absolute;
+    /* cover the 70 percent of the page width*/
+    width: 70%;
+    height: 70%;
+}
+
+#sec1{
+	position: absolute;
+	/* define the postiion of information panel */
+	left: 72%;
+}
+
+#info{
+	position: absolute;
+	/* define the postiion of information panel */
+	top: 100%;
+
+}
+
+#position-info{
+	background-color: #edeff1;
+	width: 40%;
+}
+
+#sec2{
+	position: absolute;
+	/* define the postiion of information panel */
+	left: 42%;
+	top:0%;
+}
+
+#side-menu{
+	position: absolute;
+	/* define the postiion of information panel */
+	top: 105%;
+	left: 0%;
+    /* cover the 30 percent of the page width*/
+	width: 100%;
+	height: 0%;
+
+
+}
+
+#menu-cover{
+	position: absolute;
+	top: 3%;
+	left: 3%;
+}
+
+.menu-line{
+	height: 40px;
+}
+
+#menu-cover {
+	height: 35%;
+	width: 90%;
+	/* define the background color of the information panel */
+/*	background-color: #edeff1;
+*/	/* set radius for the ellipse frame */
+    border-radius: 11px;
+    /* add paddings so there would be some blank spaces around the informaiton panel */
+    padding: 24px 23px 20px;
+    /* settings for the font */
+    font-family: "Lato",Helvetica,Arial,sans-serif;
+    font-size: 15px;
+}
+
+/* there defines every single line in the information panel */
+.menu-line{
+	border-radius: 11px;
+    box-shadow: none;
+    color: #34495e;
+    font-family: "Lato",Helvetica,Arial,sans-serif;
+    font-size: 15px;
+    line-height: 1.467;
+    padding: 4px 4px;
+}
+
+.button{
+    height:30px;
+    width:250px;
+position: absolute;
+	top: 593%;
+	left: 13%;
+}
+
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/image/background.jpeg b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/image/background.jpeg
new file mode 100644
index 0000000..f7d6490
Binary files /dev/null and b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/image/background.jpeg differ
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/image/market1.jpg b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/image/market1.jpg
new file mode 100644
index 0000000..2860602
Binary files /dev/null and b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/image/market1.jpg differ
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/image/market2.jpg b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/image/market2.jpg
new file mode 100644
index 0000000..5616679
Binary files /dev/null and b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/image/market2.jpg differ
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/image/vegetable1.jpg b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/image/vegetable1.jpg
new file mode 100644
index 0000000..bdbd5d6
Binary files /dev/null and b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/image/vegetable1.jpg differ
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/index.html b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/index.html
new file mode 100644
index 0000000..22d520f
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/index.html
@@ -0,0 +1,121 @@
+<html>
+  <head>
+	<meta charset="UTF-8">
+	<meta name="descriptions" content="Place to Eat">
+	<meta name="author" content="Charles Song">
+
+	<link rel="stylesheet" href="css/startPage.css" >
+    <link rel="stylesheet" href="css/speedMode.css" >
+
+
+	<link rel='stylesheet' href='http://fonts.googleapis.com/css?family=Play:700,400' type='text/css'>
+    <script type="text/javascript" src="http://iop.io/js/vendor/d3.v3.min.js"></script>
+    <script type="text/javascript" src="http://iop.io/js/vendor/polymer/PointerEvents/pointerevents.js"></script>
+    <script type="text/javascript" src="http://iop.io/js/vendor/polymer/PointerGestures/pointergestures.js"></script>
+    <script type="text/javascript" src="http://iop.io/js/iopctrl.js"></script>
+    
+    <script src="http://d3js.org/d3.v3.min.js" language="JavaScript"></script>
+    <script src="js/liquidFillGauge.js" language="JavaScript"></script>
+    <style>
+        .liquidFillGaugeText { font-family: Helvetica; font-weight: bold; }
+    </style>
+
+  </head>
+
+
+  <body>
+	<div id="header">
+			<h1>Lafayette Fresh Vegetable</h1>
+		<p><a href="main.html">Try to find a market for fresh vegetable? Check it out!</a></p>
+
+	</div>
+
+	<div id="sec2">
+		<img src="image/vegetable1.jpg" >
+
+	</div>
+
+		<div id="sec1">
+				<img src="image/market1.jpg">
+	</div>
+
+	
+	<div id="sec3">
+		<span id="speedometer"></span>
+		<script>
+        var svg = d3.select("#speedometer")
+                .append("svg:svg")
+                .attr("width", 400)
+                .attr("height", 400);
+
+
+        var gauge = iopctrl.arcslider()
+                .radius(120)
+                .events(false)
+                .indicator(iopctrl.defaultGaugeIndicator);
+        gauge.axis().orient("in")
+                .normalize(true)
+                .ticks(12)
+                .tickSubdivide(3)
+                .tickSize(10, 8, 10)
+                .tickPadding(5)
+                .scale(d3.scale.linear()
+                        .domain([0, 100])
+                        .range([-3*Math.PI/4, 3*Math.PI/4]));
+
+        var segDisplay = iopctrl.segdisplay()
+                .width(80)
+                .digitCount(4)
+                .negative(false)
+                .decimals(0);
+
+        svg.append("g")
+                .attr("class", "segdisplay")
+                .attr("transform", "translate(130, 200)")
+                .call(segDisplay);
+
+        svg.append("g")
+                .attr("class", "gauge")
+                .call(gauge);
+
+        var degree = 100 * Math.random()
+
+        segDisplay.value(degree);
+        gauge.value(degree);
+    
+    </script>
+	</div>
+
+	<div id="sec4">
+    	<h3> Degree </h3>
+	</div>
+
+    <div id="sec5">
+            <svg id="fillgauge1" width="97%" height="250" onclick="gauge1.update(NewValue());"></svg>
+<script language="JavaScript">
+    var gauge1 = loadLiquidFillGauge("fillgauge1", 100 * Math.random());
+    var config1 = liquidFillGaugeDefaultSettings();
+    config1.circleColor = "#FF7777";
+    config1.textColor = "#FF4444";
+    config1.waveTextColor = "#FFAAAA";
+    config1.waveColor = "#FFDDDD";
+    config1.circleThickness = 0.2;
+    config1.textVertPosition = 0.2;
+    config1.waveAnimateTime = 1000;
+
+    function NewValue(){
+        if(Math.random() > .5){
+            return Math.round(Math.random()*100);
+        } else {
+            return (Math.random()*100).toFixed(1);
+        }
+    }
+</script>
+
+    <div id="sec6">
+        <h3> Chance of Rain </h3>
+    </div>
+
+    </div>  	
+  </body>
+</html>
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/liquidFillGauge.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/liquidFillGauge.js
new file mode 100644
index 0000000..7493713
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/liquidFillGauge.js
@@ -0,0 +1,268 @@
+/*!
+ * @license Open source under BSD 2-clause (http://choosealicense.com/licenses/bsd-2-clause/)
+ * Copyright (c) 2015, Curtis Bratton
+ * All rights reserved.
+ *
+ * Liquid Fill Gauge v1.1
+ */
+function liquidFillGaugeDefaultSettings(){
+    return {
+        minValue: 0, // The gauge minimum value.
+        maxValue: 100, // The gauge maximum value.
+        circleThickness: 0.05, // The outer circle thickness as a percentage of it's radius.
+        circleFillGap: 0.05, // The size of the gap between the outer circle and wave circle as a percentage of the outer circles radius.
+        circleColor: "#178BCA", // The color of the outer circle.
+        waveHeight: 0.05, // The wave height as a percentage of the radius of the wave circle.
+        waveCount: 1, // The number of full waves per width of the wave circle.
+        waveRiseTime: 1000, // The amount of time in milliseconds for the wave to rise from 0 to it's final height.
+        waveAnimateTime: 18000, // The amount of time in milliseconds for a full wave to enter the wave circle.
+        waveRise: true, // Control if the wave should rise from 0 to it's full height, or start at it's full height.
+        waveHeightScaling: true, // Controls wave size scaling at low and high fill percentages. When true, wave height reaches it's maximum at 50% fill, and minimum at 0% and 100% fill. This helps to prevent the wave from making the wave circle from appear totally full or empty when near it's minimum or maximum fill.
+        waveAnimate: true, // Controls if the wave scrolls or is static.
+        waveColor: "#178BCA", // The color of the fill wave.
+        waveOffset: 0, // The amount to initially offset the wave. 0 = no offset. 1 = offset of one full wave.
+        textVertPosition: .5, // The height at which to display the percentage text withing the wave circle. 0 = bottom, 1 = top.
+        textSize: 1, // The relative height of the text to display in the wave circle. 1 = 50%
+        valueCountUp: true, // If true, the displayed value counts up from 0 to it's final value upon loading. If false, the final value is displayed.
+        displayPercent: true, // If true, a % symbol is displayed after the value.
+        textColor: "#045681", // The color of the value text when the wave does not overlap it.
+        waveTextColor: "#A4DBf8" // The color of the value text when the wave overlaps it.
+    };
+}
+
+function loadLiquidFillGauge(elementId, value, config) {
+    if(config == null) config = liquidFillGaugeDefaultSettings();
+
+    var gauge = d3.select("#" + elementId);
+    var radius = Math.min(parseInt(gauge.style("width")), parseInt(gauge.style("height")))/2;
+    var locationX = parseInt(gauge.style("width"))/2 - radius;
+    var locationY = parseInt(gauge.style("height"))/2 - radius;
+    var fillPercent = Math.max(config.minValue, Math.min(config.maxValue, value))/config.maxValue;
+
+    var waveHeightScale;
+    if(config.waveHeightScaling){
+        waveHeightScale = d3.scale.linear()
+            .range([0,config.waveHeight,0])
+            .domain([0,50,100]);
+    } else {
+        waveHeightScale = d3.scale.linear()
+            .range([config.waveHeight,config.waveHeight])
+            .domain([0,100]);
+    }
+
+    var textPixels = (config.textSize*radius/2);
+    var textFinalValue = parseFloat(value).toFixed(2);
+    var textStartValue = config.valueCountUp?config.minValue:textFinalValue;
+    var percentText = config.displayPercent?"%":"";
+    var circleThickness = config.circleThickness * radius;
+    var circleFillGap = config.circleFillGap * radius;
+    var fillCircleMargin = circleThickness + circleFillGap;
+    var fillCircleRadius = radius - fillCircleMargin;
+    var waveHeight = fillCircleRadius*waveHeightScale(fillPercent*100);
+
+    var waveLength = fillCircleRadius*2/config.waveCount;
+    var waveClipCount = 1+config.waveCount;
+    var waveClipWidth = waveLength*waveClipCount;
+
+    // Rounding functions so that the correct number of decimal places is always displayed as the value counts up.
+    var textRounder = function(value){ return Math.round(value); };
+    if(parseFloat(textFinalValue) != parseFloat(textRounder(textFinalValue))){
+        textRounder = function(value){ return parseFloat(value).toFixed(1); };
+    }
+    if(parseFloat(textFinalValue) != parseFloat(textRounder(textFinalValue))){
+        textRounder = function(value){ return parseFloat(value).toFixed(2); };
+    }
+
+    // Data for building the clip wave area.
+    var data = [];
+    for(var i = 0; i <= 40*waveClipCount; i++){
+        data.push({x: i/(40*waveClipCount), y: (i/(40))});
+    }
+
+    // Scales for drawing the outer circle.
+    var gaugeCircleX = d3.scale.linear().range([0,2*Math.PI]).domain([0,1]);
+    var gaugeCircleY = d3.scale.linear().range([0,radius]).domain([0,radius]);
+
+    // Scales for controlling the size of the clipping path.
+    var waveScaleX = d3.scale.linear().range([0,waveClipWidth]).domain([0,1]);
+    var waveScaleY = d3.scale.linear().range([0,waveHeight]).domain([0,1]);
+
+    // Scales for controlling the position of the clipping path.
+    var waveRiseScale = d3.scale.linear()
+        // The clipping area size is the height of the fill circle + the wave height, so we position the clip wave
+        // such that the it will overlap the fill circle at all when at 0%, and will totally cover the fill
+        // circle at 100%.
+        .range([(fillCircleMargin+fillCircleRadius*2+waveHeight),(fillCircleMargin-waveHeight)])
+        .domain([0,1]);
+    var waveAnimateScale = d3.scale.linear()
+        .range([0, waveClipWidth-fillCircleRadius*2]) // Push the clip area one full wave then snap back.
+        .domain([0,1]);
+
+    // Scale for controlling the position of the text within the gauge.
+    var textRiseScaleY = d3.scale.linear()
+        .range([fillCircleMargin+fillCircleRadius*2,(fillCircleMargin+textPixels*0.7)])
+        .domain([0,1]);
+
+    // Center the gauge within the parent SVG.
+    var gaugeGroup = gauge.append("g")
+        .attr('transform','translate('+locationX+','+locationY+')');
+
+    // Draw the outer circle.
+    var gaugeCircleArc = d3.svg.arc()
+        .startAngle(gaugeCircleX(0))
+        .endAngle(gaugeCircleX(1))
+        .outerRadius(gaugeCircleY(radius))
+        .innerRadius(gaugeCircleY(radius-circleThickness));
+    gaugeGroup.append("path")
+        .attr("d", gaugeCircleArc)
+        .style("fill", config.circleColor)
+        .attr('transform','translate('+radius+','+radius+')');
+
+    // Text where the wave does not overlap.
+    var text1 = gaugeGroup.append("text")
+        .text(textRounder(textStartValue) + percentText)
+        .attr("class", "liquidFillGaugeText")
+        .attr("text-anchor", "middle")
+        .attr("font-size", textPixels + "px")
+        .style("fill", config.textColor)
+        .attr('transform','translate('+radius+','+textRiseScaleY(config.textVertPosition)+')');
+
+    // The clipping wave area.
+    var clipArea = d3.svg.area()
+        .x(function(d) { return waveScaleX(d.x); } )
+        .y0(function(d) { return waveScaleY(Math.sin(Math.PI*2*config.waveOffset*-1 + Math.PI*2*(1-config.waveCount) + d.y*2*Math.PI));} )
+        .y1(function(d) { return (fillCircleRadius*2 + waveHeight); } );
+    var waveGroup = gaugeGroup.append("defs")
+        .append("clipPath")
+        .attr("id", "clipWave" + elementId);
+    var wave = waveGroup.append("path")
+        .datum(data)
+        .attr("d", clipArea)
+        .attr("T", 0);
+
+    // The inner circle with the clipping wave attached.
+    var fillCircleGroup = gaugeGroup.append("g")
+        .attr("clip-path", "url(#clipWave" + elementId + ")");
+    fillCircleGroup.append("circle")
+        .attr("cx", radius)
+        .attr("cy", radius)
+        .attr("r", fillCircleRadius)
+        .style("fill", config.waveColor);
+
+    // Text where the wave does overlap.
+    var text2 = fillCircleGroup.append("text")
+        .text(textRounder(textStartValue) + percentText)
+        .attr("class", "liquidFillGaugeText")
+        .attr("text-anchor", "middle")
+        .attr("font-size", textPixels + "px")
+        .style("fill", config.waveTextColor)
+        .attr('transform','translate('+radius+','+textRiseScaleY(config.textVertPosition)+')');
+
+    // Make the value count up.
+    if(config.valueCountUp){
+        var textTween = function(){
+            var i = d3.interpolate(this.textContent, textFinalValue);
+            return function(t) { this.textContent = textRounder(i(t)) + percentText; }
+        };
+        text1.transition()
+            .duration(config.waveRiseTime)
+            .tween("text", textTween);
+        text2.transition()
+            .duration(config.waveRiseTime)
+            .tween("text", textTween);
+    }
+
+    // Make the wave rise. wave and waveGroup are separate so that horizontal and vertical movement can be controlled independently.
+    var waveGroupXPosition = fillCircleMargin+fillCircleRadius*2-waveClipWidth;
+    if(config.waveRise){
+        waveGroup.attr('transform','translate('+waveGroupXPosition+','+waveRiseScale(0)+')')
+            .transition()
+            .duration(config.waveRiseTime)
+            .attr('transform','translate('+waveGroupXPosition+','+waveRiseScale(fillPercent)+')')
+            .each("start", function(){ wave.attr('transform','translate(1,0)'); }); // This transform is necessary to get the clip wave positioned correctly when waveRise=true and waveAnimate=false. The wave will not position correctly without this, but it's not clear why this is actually necessary.
+    } else {
+        waveGroup.attr('transform','translate('+waveGroupXPosition+','+waveRiseScale(fillPercent)+')');
+    }
+
+    if(config.waveAnimate) animateWave();
+
+    function animateWave() {
+        wave.attr('transform','translate('+waveAnimateScale(wave.attr('T'))+',0)');
+        wave.transition()
+            .duration(config.waveAnimateTime * (1-wave.attr('T')))
+            .ease('linear')
+            .attr('transform','translate('+waveAnimateScale(1)+',0)')
+            .attr('T', 1)
+            .each('end', function(){
+                wave.attr('T', 0);
+                animateWave(config.waveAnimateTime);
+            });
+    }
+
+    function GaugeUpdater(){
+        this.update = function(value){
+            var newFinalValue = parseFloat(value).toFixed(2);
+            var textRounderUpdater = function(value){ return Math.round(value); };
+            if(parseFloat(newFinalValue) != parseFloat(textRounderUpdater(newFinalValue))){
+                textRounderUpdater = function(value){ return parseFloat(value).toFixed(1); };
+            }
+            if(parseFloat(newFinalValue) != parseFloat(textRounderUpdater(newFinalValue))){
+                textRounderUpdater = function(value){ return parseFloat(value).toFixed(2); };
+            }
+
+            var textTween = function(){
+                var i = d3.interpolate(this.textContent, parseFloat(value).toFixed(2));
+                return function(t) { this.textContent = textRounderUpdater(i(t)) + percentText; }
+            };
+
+            text1.transition()
+                .duration(config.waveRiseTime)
+                .tween("text", textTween);
+            text2.transition()
+                .duration(config.waveRiseTime)
+                .tween("text", textTween);
+
+            var fillPercent = Math.max(config.minValue, Math.min(config.maxValue, value))/config.maxValue;
+            var waveHeight = fillCircleRadius*waveHeightScale(fillPercent*100);
+            var waveRiseScale = d3.scale.linear()
+                // The clipping area size is the height of the fill circle + the wave height, so we position the clip wave
+                // such that the it will overlap the fill circle at all when at 0%, and will totally cover the fill
+                // circle at 100%.
+                .range([(fillCircleMargin+fillCircleRadius*2+waveHeight),(fillCircleMargin-waveHeight)])
+                .domain([0,1]);
+            var newHeight = waveRiseScale(fillPercent);
+            var waveScaleX = d3.scale.linear().range([0,waveClipWidth]).domain([0,1]);
+            var waveScaleY = d3.scale.linear().range([0,waveHeight]).domain([0,1]);
+            var newClipArea;
+            if(config.waveHeightScaling){
+                newClipArea = d3.svg.area()
+                    .x(function(d) { return waveScaleX(d.x); } )
+                    .y0(function(d) { return waveScaleY(Math.sin(Math.PI*2*config.waveOffset*-1 + Math.PI*2*(1-config.waveCount) + d.y*2*Math.PI));} )
+                    .y1(function(d) { return (fillCircleRadius*2 + waveHeight); } );
+            } else {
+                newClipArea = clipArea;
+            }
+
+            var newWavePosition = config.waveAnimate?waveAnimateScale(1):0;
+            wave.transition()
+                .duration(0)
+                .transition()
+                .duration(config.waveAnimate?(config.waveAnimateTime * (1-wave.attr('T'))):(config.waveRiseTime))
+                .ease('linear')
+                .attr('d', newClipArea)
+                .attr('transform','translate('+newWavePosition+',0)')
+                .attr('T','1')
+                .each("end", function(){
+                    if(config.waveAnimate){
+                        wave.attr('transform','translate('+waveAnimateScale(0)+',0)');
+                        animateWave(config.waveAnimateTime);
+                    }
+                });
+            waveGroup.transition()
+                .duration(config.waveRiseTime)
+                .attr('transform','translate('+waveGroupXPosition+','+newHeight+')')
+        }
+    }
+
+    return new GaugeUpdater();
+}
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/main.html b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/main.html
new file mode 100644
index 0000000..fbff823
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/main.html
@@ -0,0 +1,180 @@
+<html>
+  <head>
+	<meta charset="UTF-8">
+	<meta name="descriptions" content="Place to Eat">
+	<meta name="author" content="Charles Song">
+
+	<link rel="stylesheet" href="css/tutorial.css" >
+
+	<script src="http://code.jquery.com/jquery-1.9.1.js" type="text/javascript"></script>
+
+	<script src="http://d3js.org/d3.v3.min.js"></script>
+
+	<script src="js/tutorial.js" type="text/javascript"></script>
+	<script src="js/script.js" type="text/javascript" ></script>
+
+ <link href='http://fonts.googleapis.com/css?family=Source+Sans+Pro:200,600,200italic,600italic&subset=latin,vietnamese' rel='stylesheet' type='text/css'>
+
+  <script src="http://phuonghuynh.github.io/js/bower_components/jquery/dist/jquery.min.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/d3/d3.min.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/d3-transform/src/d3-transform.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/cafej/src/extarray.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/cafej/src/misc.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/cafej/src/micro-observer.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/microplugin/src/microplugin.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/bubble-chart/src/bubble-chart.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/bubble-chart/src/plugins/central-click/central-click.js"></script>
+  <script src="http://phuonghuynh.github.io/js/bower_components/bubble-chart/src/plugins/lines/lines.js"></script>
+  
+  
+
+  </head>
+
+
+  <body>
+	<div id="header">
+			<h1>Lafayette Fresh Vegetable</h1>
+		<p id="title">Map of Lafayette and markets' info!</p>
+	</div>
+
+	<div id="map">
+		</div>
+
+	<div id="sec1">
+		<img src="image/market2.jpg" style="width:355px;height:458px;">
+
+	</div>
+
+
+	<div id="info">
+			<h2>Markekt Info:</h2>
+	</div>
+
+
+	<div id="content">
+
+		<div id="side-menu" class="menu-line">
+			<div id="menu-cover" class="menu-line">
+				<div id="basic-info" class="menu-line">
+					<div id="weather" class="menu-line">sunny!</div>
+					<div id="sec2" class="bubbleChart"></div>
+
+				</div>
+				<div id="position-info">
+					<div id="market" class="menu-line">
+						<div id="market-name" class="test"></div>
+						<div id="website" class="test"></div>
+					</div>
+					<div id="website" class="menu-line"></div>
+					<div id="street-name" class="menu-line"></div>
+					<button class="button" onclick="myFunction()">Overview of the market (score out of 100):</button>
+					<script>
+function myFunction() {
+	// var x = document.getElementById("sec2");
+ //  x.remove("bubbleChart");
+ $("#sec2").empty();
+    $(document).ready(function () {
+    	bubbleChart = new d3.svg.BubbleChart({
+    supportResponsive: true,
+    //container: => use @default
+    size: 600,
+    //viewBoxSize: => use @default
+    innerRadius: 600 / 3.5,
+    //outerRadius: => use @default
+    radiusMin: 50,
+    //radiusMax: use @default
+    //intersectDelta: use @default
+    //intersectInc: use @default
+    //circleColor: use @default
+    data: {
+      items: [
+        {text: "Price", count: Math.round(100 * Math.random()+1)},
+        {text: "Distance to Downtown", count: Math.round(100 * Math.random()+1)},
+        {text: "Freshness", count: Math.round(100 * Math.random()+1)},
+        {text: "Distance to Purdue", count: Math.round(100 * Math.random()+1)},
+        {text: "Service", count: Math.round(100 * Math.random()+1)},
+        {text: "Open Hours", count: Math.round(100 * Math.random()+1)},
+        {text: "Rating", count: Math.round(100 * Math.random()+1)},
+        {text: "Kinds of Vegetables", count: Math.round(100 * Math.random()+1)},
+        {text: "Others", count: Math.round(100 * Math.random()+1)},
+      ],
+      eval: function (item) {return item.count;},
+      classed: function (item) {return item.text.split(" ").join("");}
+    },
+
+    plugins: [
+    
+      {
+        name: "lines",
+        options: {
+          format: [
+            {// Line #0
+              textField: "count",
+              classed: {count: true},
+              style: {
+                "font-size": "28px",
+                "font-family": "Source Sans Pro, sans-serif",
+                "text-anchor": "middle",
+                fill: "white"
+              },
+              attr: {
+                dy: "0px",
+                x: function (d) {return d.cx;},
+                y: function (d) {return d.cy;}
+              }
+            },
+            {// Line #1
+              textField: "text",
+              classed: {text: true},
+              style: {
+                "font-size": "14px",
+                "font-family": "Source Sans Pro, sans-serif",
+                "text-anchor": "middle",
+                fill: "white"
+              },
+              attr: {
+                dy: "20px",
+                x: function (d) {return d.cx;},
+                y: function (d) {return d.cy;}
+              }
+            }
+          ],
+          centralFormat: [
+            {// Line #0
+              style: {"font-size": "50px"},
+              attr: {}
+            },
+            {// Line #1
+              style: {"font-size": "30px"},
+              attr: {dy: "40px"}
+            }
+          ]
+        }
+      }]
+  });
+
+
+});
+}
+</script>
+					<div id="open-status" class="menu-line"></div>
+					<div id="scores" class="menu-line"></div>
+
+				</div>
+			
+			</div>
+			
+		</div>
+
+	</div>
+	<div id="footer">
+	</div>
+
+	<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBWhs2R0Maa3QQtLZbtbstPXK7w9cgmJho&callback=initMap"></script>
+
+<a title="Real Time Analytics" href="http://clicky.com/100881512"><img alt="Real Time Analytics" src="//static.getclicky.com/media/links/badge.gif" border="0" /></a>
+<script src="//static.getclicky.com/js" type="text/javascript"></script>
+<script type="text/javascript">try{ clicky.init(100881512); }catch(e){}</script>
+<noscript><p><img alt="Clicky" width="1" height="1" src="//in.getclicky.com/100881512ns.gif" /></p></noscript>
+  </body>
+</html>
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/script.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/script.js
new file mode 100644
index 0000000..1104e22
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-dengc/script.js
@@ -0,0 +1,118 @@
+/**
+This is the tutorial project for 2015-fall Purdue Ironhack, which is organized by Reserach Center of Open Digital Innovation(RCODI) at Purdue University. 
+If you want to know more about the Ironhack or about the RCODI, please find our website here: https://www.purdue.edu/opendigital/
+You can checkout the code for this project on github: https://github.com/charlessong0/2015-Purdue-Ironhack
+The demo page of this project is located at: http://test.rcodi.charlessong.me/
+
+This is the javascript file for the radar chart。 We can define the content of the chart here. We can also defind the numbers by accessing external links and resources such as JSON files.
+**/
+
+var xmlhttp,
+	url;
+//create a new httprequest for this session
+xmlhttp = new XMLHttpRequest();
+//json format data resource url
+url = "https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20html%20where%20url%3D'http%3A%2F%2Fw1.weather.gov%2Fobhistory%2FKLAF.html'&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys"; 
+//url = "http://api.openweathermap.org/data/2.5/weather?q=chicago";
+xmlhttp.open("GET", url, true);
+xmlhttp.send();
+
+//once the request is accepted, process the fowllowing function to get data and complete the app information
+xmlhttp.onreadystatechange = function() {
+    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
+    	var myArr,
+    		json,
+    		w = 0,
+			h = 0,
+			svg,
+			colorscale,
+			titleOptions,
+			titleText,
+			title;
+		vartext = "";
+        
+        myArr = xmlhttp.responseText;
+        text = myArr;
+        json = JSON.parse(text);
+        //alert(JSON.parse(text).coord.lon);
+        //document.getElementById("id01").innerHTML = myArr;
+    
+        //document.getElementById("weather").innerHTML = "Today the weather is " + json.weather[0].main + " and HOT!";
+        document.getElementById("weather").innerHTML = "Today the weather is " + json.query.results.body.table[3].tbody.tr[3].td[4].content;
+		//
+		//variables for the title
+		//
+		var 
+
+		//initiate the title
+		svg = d3.select('#body')
+			.selectAll('svg')
+			.append('svg')
+			.attr("width", 300)
+			.attr("height", 300)
+
+		//variables for creating colour squares
+		colorscale = d3.scale.category10();
+
+		//titles
+		titleOptions = ['Final Scores'];
+		titleText = svg.append("text")
+			.attr("class", "title")
+			.attr('transform', 'translate(90,0)') 
+			.attr("x", w-70)
+			.attr("y", 10)
+			.attr("font-size", "12px")
+			.attr("fill", "#404040")
+			.text("Find your best place to get food!");
+				
+		//Initiate title	
+		title = svg.append("g")
+			.attr("class", "title")
+			.attr("height", 100)
+			.attr("width", 200)
+			.attr('transform', 'translate(90,20)') 
+			;
+			//Create colour squares
+		title.selectAll('rect')
+		  .data(titleOptions)
+		  .enter()
+		  .append("rect")
+		  .attr("x", w - 65)
+		  .attr("y", function(d, i){ return i * 20;})
+		  .attr("width", 10)
+		  .attr("height", 10)
+		  .style("fill", function(d, i){ return colorscale(i);})
+		  ;
+		//Create text next to squares
+		title.selectAll('text')
+		  .data(titleOptions)
+		  .enter()
+		  .append("text")
+		  .attr("x", w - 52)
+		  .attr("y", function(d, i){ return i * 20 + 9;})
+		  .attr("font-size", "13px")
+		  .attr("fill", "#737373")
+		  .text(function(d) { return d; })
+		  ;	
+    }
+};
+
+// those are functions for calculating scores for each store
+function calculateScore() {
+	return 0;
+}
+
+//show the request function in the text format
+function myRequestFunction(arr) {
+    var out = "";
+    var i;
+    for(i = 0; i < arr.length; i++) {
+        out += '<a href="' + arr[i].url + '">' + 
+        arr[i].display + '</a><br>';
+    }
+    document.getElementById("id01").innerHTML = out;
+}
+
+
+
+
