diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-sabrina-hsu/Project 2 Script.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-sabrina-hsu/Project 2 Script.js
new file mode 100644
index 0000000..bce9644
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-sabrina-hsu/Project 2 Script.js	
@@ -0,0 +1,69 @@
+function search()  {
+			document.getElementById("test").innerHTML = "Hello World!";
+		}
+function initMap() {
+	//Initializes the map and centers it at West Lafayette
+	var myLatLng = {lat: 40.425869, lng:  -86.908066};
+	var mapDiv = document.getElementById('map');
+	var map = new google.maps.Map(mapDiv, {
+		center: myLatLng, 
+		zoom: 15,
+		mapTypeId: google.maps.MapTypeId.ROADMAP
+	});
+
+	// Create the search box and link it to the UI element.
+	var input = document.getElementById('pac-input');
+	var searchBox = new google.maps.places.SearchBox(input);
+	map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
+
+	// Bias the SearchBox results towards current map's viewport.
+	map.addListener('bounds_changed', function() {
+	searchBox.setBounds(map.getBounds());
+	});
+
+	var markers = [];
+	// Listen for the event fired when the user selects a prediction and retrieve
+	// more details for that place.
+	searchBox.addListener('places_changed', function() {
+	var places = searchBox.getPlaces();
+
+	if (places.length == 0) {
+	  return;
+	}
+
+	// Clear out the old markers.
+	markers.forEach(function(marker) {
+	  marker.setMap(null);
+	});
+	markers = [];
+
+	// For each place, get the icon, name and location.
+	var bounds = new google.maps.LatLngBounds();
+	places.forEach(function(place) {
+	  var icon = {
+		url: place.icon,
+		size: new google.maps.Size(71, 71),
+		origin: new google.maps.Point(0, 0),
+		anchor: new google.maps.Point(17, 34),
+		scaledSize: new google.maps.Size(25, 25)
+	  };
+
+	  // Create a marker for each place.
+	  markers.push(new google.maps.Marker({
+		map: map,
+		icon: icon,
+		title: place.name,
+		position: place.geometry.location
+	  }));
+
+	  if (place.geometry.viewport) {
+		// Only geocodes have viewport.
+		bounds.union(place.geometry.viewport);
+	  } else {
+		bounds.extend(place.geometry.location);
+	  }
+	});
+	map.fitBounds(bounds);
+	});
+
+}
\ No newline at end of file
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-sabrina-hsu/Project 2 Website.html b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-sabrina-hsu/Project 2 Website.html
new file mode 100644
index 0000000..88c8a93
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-sabrina-hsu/Project 2 Website.html	
@@ -0,0 +1,24 @@
+<!DOCTYPE html>
+<html>
+<head>
+<style>
+	#map {
+		width: 500px;
+		height: 400px;
+	}
+</style>
+</head>
+<h1>
+	Find a store!
+
+</h1>
+<body> 
+	<input id="pac-input" class="controls" type="text" placeholder="Search Box">
+	<div id="map"></div>
+	<script src="https://maps.googleapis.com/maps/api/js?libraries=places&callback=initMap" async defer></script>
+	<p id="test">
+	</p>
+	<script src="Project 2 Script.js">
+	</script>
+</body>
+</html>
