diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase1/2016greenironhack-MegamindHenry/README.md b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/README.md
index ab30586..0e12c3a 100755
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase1/2016greenironhack-MegamindHenry/README.md
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/README.md
@@ -6,23 +6,45 @@ This is a application which help people find fresh food in Greater Lafayette are
 Convenient, Fresh, Saving
 
 ## Datasets
-* "Online Climate Data" is used from data
+* "Online Climate Data" http://www.ncdc.noaa.gov/cdo-web/webservices These publicly accessible web services allow users to have programmatic access to NCEI data and use custom and standard implementations such as OGC GIS Web Services (WMS, WFS, WCS) and OPeNDAP. Some services allow users to download data in a variety of formats such as CSV, XML, Shapefile, KMZ, and NetCDF.
+
+* "Local Food Directories: National Farmers Market Directory" https://www.ams.usda.gov/local-food-directories/farmersmarkets The Farmers Market Directory lists markets that feature two or more farm vendors selling agricultural products directly to customers at a common, recurrent physical location. Maintained by the Agricultural Marketing Service, the Directory is designed to provide customers with convenient access to information about farmers market listings to include: market locations, directions, operating times, product offerings, accepted forms of payment, and more.
 
 ## Description
 * Map View:
 	1. Basic Map with specific location is located in west lafayette
-	2. Markers are for marketss' names
+	2. Markers are for markets' names
 	3. Markets are labeled with names
-	4. Detailed information are showed in InfoWindow
+	4. Detailed information are showed in side window
+
+* Table View:
+	1. Markets are list in table with name address, distance, etc.
+	2. User can sort table by click the title
+	3. Details show in the side window by clicking details
 
-* Data Visualization:
-	1. Data are showed in graphics
+* Product View:
+	1. Products details show in product tab
 
 * Interaction Form:
-	1. So far there is no interaction form
+	1. people are able to search market by zip code
+	2. people can select to compare markets
 
 ## Build Case
-So far it is built on my local mechine
+All external sources including Javasripts, CSSs and APIs are list here.
+* Javascript
+	1. D3
+	2. JQuery
+	3. Bootstrap
+
+* CSS
+	1. Bootstrap
+	2. Google fonts
+	3. D3
+
+* API
+ 	1. Google Map
+ 	2. Yahoo Weather
+ 	4. Local Food Directories: National Farmers Market Directory
 
 ## Test Case
-I test on Chrome
\ No newline at end of file
+	1. Chrome
\ No newline at end of file
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/apiRequest.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/apiRequest.js
new file mode 100644
index 0000000..2b4914a
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/apiRequest.js
@@ -0,0 +1,160 @@
+/*
+ * Author: Xuefeng Luo hakunamatatahenry@gmail
+ */
+
+//request market data
+function markets(map, zip = 47906){
+	var xmlhttp = new XMLHttpRequest();
+	var url = "http://search.ams.usda.gov/farmersmarkets/v1/data.svc/zipSearch?zip=" + zip;
+	xmlhttp.open("GET", url, true);
+	xmlhttp.send();
+
+	xmlhttp.onreadystatechange = function() {
+	    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
+	        var myArr = xmlhttp.responseText;
+	        var text = JSON.parse(myArr);
+
+	        //get markets number
+	        var markets_num = text.results.length;
+
+	        //process markets data to market objects
+	        var i = 0;
+	        for (i; i < markets_num; i++){
+	        	var num = i + 1;
+	        	var market_id = text.results[i].id;
+	        	var market_name_distance = text.results[i].marketname;
+	        	var name_index = text.results[i].marketname.indexOf(" ");
+	        	var market_name = text.results[i].marketname.substring(name_index);
+	        	var market_distance = text.results[i].marketname.substring(0, name_index);
+
+	        	//process market table and map
+	        	market_details(market_id, market_name, num, market_distance, map);
+	        };
+	    }
+	};
+};
+
+
+
+//request market details data
+function market_details(id, name, num, distance, map){
+	var xmlhttp = new XMLHttpRequest();
+	var url = "http://search.ams.usda.gov/farmersmarkets/v1/data.svc/mktDetail?id=" + id;
+	xmlhttp.open("GET", url, true);
+	xmlhttp.send();
+
+	xmlhttp.onreadystatechange = function() {
+	    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
+	        var myArr = xmlhttp.responseText;
+	        var text = JSON.parse(myArr);
+
+	        //get google link in order to retrieve lat and lig
+	        var latlngstring = text.marketdetails.GoogleLink;
+
+	        //get lat from google link
+	        var lat = get_lat(latlngstring);
+
+	        //get lng from google link
+	        var lng = get_lng(latlngstring);
+
+	        var product_num = cal_product_num(text.marketdetails.Products);
+
+	        //create market object
+	        var market = {
+	        	id:num,
+	        	distance:distance,
+	        	address:text.marketdetails.Address,
+	        	googlelink:text.marketdetails.GoogleLink,
+	        	products:text.marketdetails.Products,
+	        	schedule:get_schedule(text.marketdetails.Schedule),
+	        	name:name,
+	        	location:{
+	        		lat:parseFloat(lat),
+	        		lng:parseFloat(lng),
+	        	},
+	        	score:{
+	        		price:num,
+	        		freshness:num,
+	        		variety:score_variety(product_num),
+	        		distance:score_distance(distance),
+	        	},
+	        };
+
+	        //add to market table
+	        market_table(market);
+
+	        //add new google marker in map
+	        new_marker(market.location, map, market);
+	    }
+	};
+};
+
+function get_schedule(raw_schedule){
+	var schedule;
+
+	var index = raw_schedule.indexOf(";");
+
+	schedule = raw_schedule.substring(0, index);
+
+	return schedule;
+};
+
+//request weather data
+function weather(){
+	//get weather condition from Yahoo Weather
+	var xmlhttp = new XMLHttpRequest();
+	var url = "https://query.yahooapis.com/v1/public/yql?q=select%20item.condition%20from%20weather.forecast%20where%20woeid%20%3D%2012778445&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys";
+	xmlhttp.open("GET", url, true);
+	xmlhttp.send();
+
+	xmlhttp.onreadystatechange = function() {
+	    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
+	        var myArr = xmlhttp.responseText;
+	        var text = JSON.parse(myArr);
+
+	        //retrieve condition for json
+	        var condition = text.query.results.channel.item.condition.text;
+
+	        //output weather
+	        output_weather(condition);
+	    }
+	};
+};
+
+function show_search_result(zip){
+	var latlng;
+
+	var xmlhttp = new XMLHttpRequest();
+	var url = "http://maps.googleapis.com/maps/api/geocode/json?address=" + zip + "&sensor=false";
+	xmlhttp.open("GET", url, true);
+	xmlhttp.send();
+
+	xmlhttp.onreadystatechange = function() {
+	    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
+	        var myArr = xmlhttp.responseText;
+	        var text = JSON.parse(myArr);
+
+	        latlng = text.results[0].geometry.location;
+
+	        redraw_map_search(latlng, zip);
+	    }
+	};
+};
+
+//reques climate data
+function climate(){
+	var xmlhttp = new XMLHttpRequest();
+	var token = "xuoVwFiQRBuxlUAfZTjwEjwpkHSgZrfh";
+	var url = "http://www.ncdc.noaa.gov/cdo-web/api/v2/datasets";
+	xmlhttp.open("GET", url, true);
+	xmlhttp.setRequestHeader("token", token);
+	xmlhttp.send();
+
+	xmlhttp.onreadystatechange = function() {
+	    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
+	        var myArr = xmlhttp.responseText;
+	        var text = JSON.parse(myArr);
+	    }
+	};
+
+};
\ No newline at end of file
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase1/2016greenironhack-MegamindHenry/css/map.css b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/css/map.css
index bbef6a4..757ad96 100644
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase1/2016greenironhack-MegamindHenry/css/map.css
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/css/map.css
@@ -1,11 +1,33 @@
 html, body {
+	position: absolute;
 height: 100%;
 margin: 0;
 padding: 0;
-width: 100%;
+width: 98%;
+left: 1%;
 }
 
 #map {
-height: 70%;
-width: 70%;
+	position: absolute;
+	height: 100%;
+	width: 65%;
+}
+
+#left {
+	width: 65%;
+}
+
+#right {
+	position: absolute;
+	width: 30%;
+	left: 70%;
+}
+
+.title-contain{
+	margin-left: 5%;
+	margin-right: 5%;
+}
+
+.right-contain{
+	margin: 5%;
 }
\ No newline at end of file
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/css/radar.css b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/css/radar.css
new file mode 100644
index 0000000..f5c1fa9
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/css/radar.css
@@ -0,0 +1,13 @@
+.legend {
+	font-family: 'Raleway', sans-serif;
+	fill: #333333;
+}
+
+.tooltip {
+	fill: #333333;
+}
+
+#radar{
+	zoom: 0.6;
+	-moz-transform: scale(0.6);
+}
\ No newline at end of file
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase1/2016greenironhack-MegamindHenry/index.html b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/index.html
index 8d92c29..c6bc3df 100644
--- a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase1/2016greenironhack-MegamindHenry/index.html
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/index.html
@@ -6,16 +6,77 @@
     <meta name="viewport" content="initial-scale=1.0">
     <meta charset="utf-8">
     <link rel="stylesheet" href="css/map.css" type="text/css"/>
+    <link rel="stylesheet" href="css/radar.css" type="text/css"/>
     <script src="js/map.js" type="text/javascript" ></script>
+    <script src="js/apiRequest.js" type="text/javascript" ></script>
     <!-- Bootstrap -->
     <link href="css/bootstrap.css" rel="stylesheet">
 
+    <!-- Google fonts -->
+    <link href='http://fonts.googleapis.com/css?family=Open+Sans:400,300' rel='stylesheet' type='text/css'>
+    <link href='https://fonts.googleapis.com/css?family=Raleway' rel='stylesheet' type='text/css'>
+
+    <!-- D3.js -->
+    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>
+
   </head>
   <body>
+
     <div class="jumbotron">
-        <h1>FFF (Find Fresh Food)</h1>
-        <p>Find Fresh Food is a website to help people find the freshest and cheapest food in Greater Lafayette Area.</p>
+        <div id="title" class="title-contain"><h1>Please refresh the page! The Greate Firewall of China may block this page. :-)</h1></div>
+        <div id="weather" class="text-right title-contain">Loading Weather...</div>
+        <div id="time" class="text-right title-contain"></div>
+    </div>
+
+    <nav class="navbar navbar-default">
+      <div class="container-fluid">
+        <!-- Brand and toggle get grouped for better mobile display -->
+        <div class="navbar-header">
+          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
+            <span class="sr-only">Toggle navigation</span>
+            <span class="icon-bar"></span>
+            <span class="icon-bar"></span>
+            <span class="icon-bar"></span>
+          </button>
+          <p class="navbar-brand" href="#">View</p>
+        </div>
+
+        <!-- Collect the nav links, forms, and other content for toggling -->
+        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
+          <ul class="nav navbar-nav">
+            <li><a onclick="nav_menu('map')" href="#">Map</a></li>
+            <li><a onclick="nav_menu('markets_table')" href="#">Table</a></li>
+            <li><a onclick="nav_menu('product')" href="#">Products</a></li>
+            <div class="navbar-form navbar-left">
+                <input id="search" type="text" class="form-control" placeholder="Search by Zipcode">
+                <button class="btn" onclick="search()">Search</button>
             </div>
+          </ul>
+        </div><!-- /.navbar-collapse -->
+      </div><!-- /.container-fluid -->
+    </nav>
+
+    <div id="right" class="jumbotron">
+        <div id="detail_title" class="right-contain"></div>
+        <div id="detail_text" class="right-contain"></div>
+        <div id="radar" class="radarChart"></div>
+    </div>
+
+    <div id="left">
+        <div id="markets_table" style="display:none">
+            <table id="market_details" class="table table-bordered">
+                <thead id="market_details_head">
+                </thead>
+                <tbody id="market_details_body">
+                </tbody>
+            </table>
+        </div>
+        <div id="product" class="jumbotron text-center" style="display:none">
+            <div id="product_title"></div>
+            <div id="product_text"></div>
+        </div>
+    </div>
+
     <div id="map"></div>
     <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDjY0KzE8_nud8HRIt4x328OqIG0m3XxIs&callback=initMap"
     async defer></script>
@@ -24,5 +85,8 @@
     <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
     <!-- Include all compiled plugins (below), or include individual files as needed -->
     <script src="js/bootstrap.js"></script>
+    <script src="js/init.js" type="text/javascript" ></script>
+
+    <script src="js/radarChart.js" type='text/javascript'></script>
   </body>
 </html>
\ No newline at end of file
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/init.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/init.js
new file mode 100644
index 0000000..837d813
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/init.js
@@ -0,0 +1,348 @@
+/*
+ * Author: Xuefeng Luo hakunamatatahenry@gmail
+ */
+
+function init(map){
+	//process title
+	init_title();
+
+	//process the weather
+	weather();
+
+	//process the time
+	time();
+
+	//initialize table header
+	init_market_table();
+
+	//request markets online and process to table and map
+	markets(map);
+
+	//initialize details div
+	init_right();
+
+	init_product();
+};
+
+function redraw_map_search(latlng, zip){
+	var map;
+
+	map = new google.maps.Map(document.getElementById('map'), {
+	  	center: latlng,
+	  	zoom: 9
+	});
+
+	init_market_table();
+
+	//request markets online and process to table and map
+	markets(map, zip);
+
+	//initialize details div
+	init_right();
+
+	init_product();
+};
+
+function search(){
+	var text = document.getElementById("search").value;
+
+	nav_menu("map");
+
+	show_search_result(text);
+};
+
+//initialize details 
+function init_right(){
+
+	document.getElementById("detail_title").innerHTML = "";
+	document.getElementById("detail_text").innerHTML = "";
+	document.getElementById("radar").innerHTML = "";
+
+
+
+	//add title
+	var right_title = add_html_element("h3", "Market Detials");
+	right_title.align = "center";
+	document.getElementById("detail_title").appendChild(right_title);
+
+	//add message
+	var right_contain = add_html_element("p", "Please select one market to view details!");
+	document.getElementById("detail_text").appendChild(right_contain);
+};
+
+//initialize details 
+function init_product(){
+	document.getElementById("product_title").innerHTML = "";
+	document.getElementById("product_text").innerHTML = "";
+
+
+	var product_title = add_html_element("h3", "Market Product Detials");
+	product_title.align = "center";
+	document.getElementById("product_title").appendChild(product_title);
+
+	var product_contain = add_html_element("p", "Please select one market to view details!");
+	document.getElementById("product_text").appendChild(product_contain);
+};
+
+//click function for nav tab
+function nav_menu(id){
+	//hide all div
+	document.getElementById("map").style.display = "none";
+	document.getElementById("markets_table").style.display = "none";
+	document.getElementById("product").style.display = "none";
+
+	//show the one
+	document.getElementById(id).style.display = "block";
+};
+
+//shotcup function to create html element with text node
+function add_html_element(type, text){
+	//create element
+	var new_element = document.createElement(type);
+
+	//create text node
+	var new_element_text = document.createTextNode(text);
+
+	//add text node to element
+	new_element.appendChild(new_element_text);
+
+	return new_element;
+};
+
+//initialize market table header
+function init_market_table(){
+	document.getElementById("market_details_head").innerHTML = "";
+	document.getElementById("market_details_body").innerHTML = "";
+
+	//create tr
+	var market_tr = document.createElement("tr");
+
+	//create headers
+	var market_id_th = add_html_element("th", "ID");
+	var market_name_th = add_html_element("th", "Name");
+	var market_address_th = add_html_element("th", "Adress");
+	// var market_google_th = add_html_element("th", "Google Link");
+	var market_distance_th = add_html_element("th", "Distance");
+	var market_detail_th = add_html_element("th", "Details");
+
+	//add headers to tr
+	market_tr.appendChild(market_id_th);
+	market_tr.appendChild(market_name_th);
+	market_tr.appendChild(market_address_th);
+	// market_tr.appendChild(market_google_th);
+	market_tr.appendChild(market_distance_th);
+	market_tr.appendChild(market_detail_th);
+
+	//add tr to table
+	document.getElementById("market_details_head").appendChild(market_tr);
+};
+
+//score market on distance, freshness, price and variety
+function score_distance(distance){
+	var score;
+
+	score = 2.5/distance;
+
+	return score;
+};
+
+function score_variety(product_num){
+	var score;
+
+	score = product_num/60;
+
+	return score;
+};
+
+function cal_product_num(products){
+	var count;
+
+	var count_1 = (products.match(/;/g) || []).length;
+
+	var count_2 = (products.match(/,/g) || []).length;
+
+	count = count_1 + count_2;
+
+	return count;
+};
+
+function show_product_details(raw_products){
+	document.getElementById("product_text").innerHTML = "";
+
+	nav_menu("product");
+
+	var products = process_raw_products(raw_products);
+
+	var product_num = products.length;
+
+	if (product_num === 1){
+		var product_p = add_html_element("p", "No products available online");
+		document.getElementById("product_text").appendChild(product_p);
+	}
+
+	var i = 0;
+
+	for (i; i < product_num; i++){
+		var product_p = add_html_element("p", products[i]);
+		document.getElementById("product_text").appendChild(product_p);
+
+
+    };
+
+
+};
+
+function process_raw_products(raw_products){
+	var products = [];
+
+	products = raw_products.split(';');
+
+	return products;
+};
+
+//show market detail on the right side
+function show_market_details(market){
+	//clear text area
+	document.getElementById("detail_text").innerHTML = "";
+
+	//create name and address
+	var name_h4 = add_html_element("h4", market.name);
+	var address_p = add_html_element("p", market.address);
+	var schedule_p = add_html_element("p", market.schedule);
+	var product_p = add_html_element("button", 'View Product Details');
+	product_p.className = "btn btn-primary";
+	product_p.addEventListener('click', function(){
+		show_product_details(market.products);
+	}, false);
+
+	var br = document.createElement("br");
+
+	//score market
+
+	//create market data for radar chart
+	var market_data = [
+		[
+			{axis:"Freshness",value:market.score.freshness/100},
+			{axis:"Price",value:market.score.price/100},
+			{axis:"Variety",value:market.score.variety},
+			{axis:"Distance",value:market.score.distance},
+		]
+	];
+
+	//draw radar chart
+	show_market_details_radar(market_data);
+
+	//add name and address
+	document.getElementById("detail_text").appendChild(name_h4);
+	document.getElementById("detail_text").appendChild(br);
+	document.getElementById("detail_text").appendChild(address_p);
+	document.getElementById("detail_text").appendChild(schedule_p);
+	document.getElementById("detail_text").appendChild(product_p);
+};
+
+//draw radar chart with data
+//refrence: D3.js
+function show_market_details_radar(market_data){
+	var margin = {top: 100, right: 100, bottom: 100, left: 100},
+	width = Math.min(700, window.innerWidth - 10) - margin.left - margin.right,
+	height = Math.min(width, window.innerHeight - margin.top - margin.bottom - 20);
+
+	var color = d3.scale.ordinal()
+	.range(["#EDC951","#CC333F","#00A0B0"]);
+
+	var radarChartOptions = {
+	  w: width,
+	  h: height,
+	  margin: margin,
+	  maxValue: 0.5,
+	  levels: 5,
+	  roundStrokes: true,
+	  color: color
+	};
+
+	RadarChart(".radarChart", market_data, radarChartOptions);
+};
+
+//add market to market table
+function market_table(market){
+	//create tr
+	var market_tr = document.createElement("tr");
+	market_tr.className = "active";
+
+	//create td
+	var market_id_td = add_html_element("td", market.id);
+	var market_name_td = add_html_element("td", market.name);
+	var market_address_td = add_html_element("td", market.address);
+	// var market_google_td = add_html_element("td", market.googlelink);
+	var market_distance_td = add_html_element("td", market.distance);
+	var market_detail_td = document.createElement("td");
+	var market_detail_td_a = add_html_element("button", "Click");
+	market_detail_td_a.className = "btn btn-primary";
+	market_detail_td_a.addEventListener('click', function(){
+		show_market_details(market);
+	}, false);
+
+	//add td
+	market_detail_td.appendChild(market_detail_td_a);
+	market_tr.appendChild(market_id_td);
+	market_tr.appendChild(market_name_td);
+	market_tr.appendChild(market_address_td);
+	// market_tr.appendChild(market_google_td);
+	market_tr.appendChild(market_distance_td);
+	market_tr.appendChild(market_detail_td);
+
+	//add tr
+	document.getElementById("market_details_body").appendChild(market_tr);
+};
+
+//retrieve lat from googlelink in market details
+function get_lat(string){
+	var index_1 = string.indexOf("q=") + 2;
+	var index_2 = string.indexOf("%2C%20");
+
+	var lat = string.substring(index_1, index_2);
+
+	return lat;
+};
+
+//retrieve lng from googlelink in market details
+function get_lng(string){
+	var index_1 = string.indexOf("%2C%20") + 6;
+	var index_2 = string.indexOf("%20(");
+
+	var lat = string.substring(index_1, index_2);
+
+	return lat;
+};
+
+//process time
+function time(){
+	//create time now
+	var now = new Date();
+
+	//create html object and add to html
+	var time_p = add_html_element("p", now);
+	document.getElementById("time").appendChild(time_p);
+};
+
+//process weather
+function output_weather(condition){
+	//pass weather condition to html
+	var weather_text = "Today is " + condition + "!";
+	var weather_p = add_html_element("p", weather_text);
+
+	document.getElementById("weather").innerHTML = "";
+	document.getElementById("weather").appendChild(weather_p);
+};
+
+//initialize title
+function init_title() {
+	//clear title
+	document.getElementById("title").innerHTML = "";
+
+	//initial title
+	var title_h1 = add_html_element("h1", "FFF (Find Fresh Food)");
+	var title_p = add_html_element("p", "Find Fresh Food is a website to help people find the freshest and cheapest food in Greater Lafayette Area.");
+	document.getElementById("title").appendChild(title_h1);
+	document.getElementById("title").appendChild(title_p);
+};
\ No newline at end of file
diff --git a/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/radarChart.js b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/radarChart.js
new file mode 100755
index 0000000..11116a3
--- /dev/null
+++ b/home/priyank/Desktop/Dropbox/RCODI/similarity-and-code-analysis/2016greenironhack-phase2/2016greenironhack-MegamindHenry/radarChart.js
@@ -0,0 +1,272 @@
+/////////////////////////////////////////////////////////
+/////////////// The Radar Chart Function ////////////////
+/////////////// Written by Nadieh Bremer ////////////////
+////////////////// VisualCinnamon.com ///////////////////
+/////////// Inspired by the code of alangrafu ///////////
+/////////////////////////////////////////////////////////
+	
+function RadarChart(id, data, options) {
+	var cfg = {
+	 w: 600,				//Width of the circle
+	 h: 600,				//Height of the circle
+	 margin: {top: 20, right: 20, bottom: 20, left: 20}, //The margins of the SVG
+	 levels: 3,				//How many levels or inner circles should there be drawn
+	 maxValue: 0, 			//What is the value that the biggest circle will represent
+	 labelFactor: 1.25, 	//How much farther than the radius of the outer circle should the labels be placed
+	 wrapWidth: 60, 		//The number of pixels after which a label needs to be given a new line
+	 opacityArea: 0.35, 	//The opacity of the area of the blob
+	 dotRadius: 4, 			//The size of the colored circles of each blog
+	 opacityCircles: 0.1, 	//The opacity of the circles of each blob
+	 strokeWidth: 2, 		//The width of the stroke around each blob
+	 roundStrokes: false,	//If true the area and stroke will follow a round path (cardinal-closed)
+	 color: d3.scale.category10()	//Color function
+	};
+	
+	//Put all of the options into a variable called cfg
+	if('undefined' !== typeof options){
+	  for(var i in options){
+		if('undefined' !== typeof options[i]){ cfg[i] = options[i]; }
+	  }//for i
+	}//if
+	
+	//If the supplied maxValue is smaller than the actual one, replace by the max in the data
+	var maxValue = Math.max(cfg.maxValue, d3.max(data, function(i){return d3.max(i.map(function(o){return o.value;}))}));
+		
+	var allAxis = (data[0].map(function(i, j){return i.axis})),	//Names of each axis
+		total = allAxis.length,					//The number of different axes
+		radius = Math.min(cfg.w/2, cfg.h/2), 	//Radius of the outermost circle
+		Format = d3.format('%'),			 	//Percentage formatting
+		angleSlice = Math.PI * 2 / total;		//The width in radians of each "slice"
+	
+	//Scale for the radius
+	var rScale = d3.scale.linear()
+		.range([0, radius])
+		.domain([0, maxValue]);
+		
+	/////////////////////////////////////////////////////////
+	//////////// Create the container SVG and g /////////////
+	/////////////////////////////////////////////////////////
+
+	//Remove whatever chart with the same id/class was present before
+	d3.select(id).select("svg").remove();
+	
+	//Initiate the radar chart SVG
+	var svg = d3.select(id).append("svg")
+			.attr("width",  cfg.w + cfg.margin.left + cfg.margin.right)
+			.attr("height", cfg.h + cfg.margin.top + cfg.margin.bottom)
+			.attr("class", "radar"+id);
+	//Append a g element		
+	var g = svg.append("g")
+			.attr("transform", "translate(" + (cfg.w/2 + cfg.margin.left) + "," + (cfg.h/2 + cfg.margin.top) + ")");
+	
+	/////////////////////////////////////////////////////////
+	////////// Glow filter for some extra pizzazz ///////////
+	/////////////////////////////////////////////////////////
+	
+	//Filter for the outside glow
+	var filter = g.append('defs').append('filter').attr('id','glow'),
+		feGaussianBlur = filter.append('feGaussianBlur').attr('stdDeviation','2.5').attr('result','coloredBlur'),
+		feMerge = filter.append('feMerge'),
+		feMergeNode_1 = feMerge.append('feMergeNode').attr('in','coloredBlur'),
+		feMergeNode_2 = feMerge.append('feMergeNode').attr('in','SourceGraphic');
+
+	/////////////////////////////////////////////////////////
+	/////////////// Draw the Circular grid //////////////////
+	/////////////////////////////////////////////////////////
+	
+	//Wrapper for the grid & axes
+	var axisGrid = g.append("g").attr("class", "axisWrapper");
+	
+	//Draw the background circles
+	axisGrid.selectAll(".levels")
+	   .data(d3.range(1,(cfg.levels+1)).reverse())
+	   .enter()
+		.append("circle")
+		.attr("class", "gridCircle")
+		.attr("r", function(d, i){return radius/cfg.levels*d;})
+		.style("fill", "#CDCDCD")
+		.style("stroke", "#CDCDCD")
+		.style("fill-opacity", cfg.opacityCircles)
+		.style("filter" , "url(#glow)");
+
+	//Text indicating at what % each level is
+	axisGrid.selectAll(".axisLabel")
+	   .data(d3.range(1,(cfg.levels+1)).reverse())
+	   .enter().append("text")
+	   .attr("class", "axisLabel")
+	   .attr("x", 4)
+	   .attr("y", function(d){return -d*radius/cfg.levels;})
+	   .attr("dy", "0.4em")
+	   .style("font-size", "10px")
+	   .attr("fill", "#737373")
+	   .text(function(d,i) { return Format(maxValue * d/cfg.levels); });
+
+	/////////////////////////////////////////////////////////
+	//////////////////// Draw the axes //////////////////////
+	/////////////////////////////////////////////////////////
+	
+	//Create the straight lines radiating outward from the center
+	var axis = axisGrid.selectAll(".axis")
+		.data(allAxis)
+		.enter()
+		.append("g")
+		.attr("class", "axis");
+	//Append the lines
+	axis.append("line")
+		.attr("x1", 0)
+		.attr("y1", 0)
+		.attr("x2", function(d, i){ return rScale(maxValue*1.1) * Math.cos(angleSlice*i - Math.PI/2); })
+		.attr("y2", function(d, i){ return rScale(maxValue*1.1) * Math.sin(angleSlice*i - Math.PI/2); })
+		.attr("class", "line")
+		.style("stroke", "white")
+		.style("stroke-width", "2px");
+
+	//Append the labels at each axis
+	axis.append("text")
+		.attr("class", "legend")
+		.style("font-size", "20px")
+		.attr("text-anchor", "middle")
+		.attr("dy", "0.35em")
+		.attr("x", function(d, i){ return rScale(maxValue * cfg.labelFactor) * Math.cos(angleSlice*i - Math.PI/2); })
+		.attr("y", function(d, i){ return rScale(maxValue * cfg.labelFactor) * Math.sin(angleSlice*i - Math.PI/2); })
+		.text(function(d){return d})
+		.call(wrap, cfg.wrapWidth);
+
+	/////////////////////////////////////////////////////////
+	///////////// Draw the radar chart blobs ////////////////
+	/////////////////////////////////////////////////////////
+	
+	//The radial line function
+	var radarLine = d3.svg.line.radial()
+		.interpolate("linear-closed")
+		.radius(function(d) { return rScale(d.value); })
+		.angle(function(d,i) {	return i*angleSlice; });
+		
+	if(cfg.roundStrokes) {
+		radarLine.interpolate("cardinal-closed");
+	}
+				
+	//Create a wrapper for the blobs	
+	var blobWrapper = g.selectAll(".radarWrapper")
+		.data(data)
+		.enter().append("g")
+		.attr("class", "radarWrapper");
+			
+	//Append the backgrounds	
+	blobWrapper
+		.append("path")
+		.attr("class", "radarArea")
+		.attr("d", function(d,i) { return radarLine(d); })
+		.style("fill", function(d,i) { return cfg.color(i); })
+		.style("fill-opacity", cfg.opacityArea)
+		.on('mouseover', function (d,i){
+			//Dim all blobs
+			d3.selectAll(".radarArea")
+				.transition().duration(200)
+				.style("fill-opacity", 0.1); 
+			//Bring back the hovered over blob
+			d3.select(this)
+				.transition().duration(200)
+				.style("fill-opacity", 0.7);	
+		})
+		.on('mouseout', function(){
+			//Bring back all blobs
+			d3.selectAll(".radarArea")
+				.transition().duration(200)
+				.style("fill-opacity", cfg.opacityArea);
+		});
+		
+	//Create the outlines	
+	blobWrapper.append("path")
+		.attr("class", "radarStroke")
+		.attr("d", function(d,i) { return radarLine(d); })
+		.style("stroke-width", cfg.strokeWidth + "px")
+		.style("stroke", function(d,i) { return cfg.color(i); })
+		.style("fill", "none")
+		.style("filter" , "url(#glow)");		
+	
+	//Append the circles
+	blobWrapper.selectAll(".radarCircle")
+		.data(function(d,i) { return d; })
+		.enter().append("circle")
+		.attr("class", "radarCircle")
+		.attr("r", cfg.dotRadius)
+		.attr("cx", function(d,i){ return rScale(d.value) * Math.cos(angleSlice*i - Math.PI/2); })
+		.attr("cy", function(d,i){ return rScale(d.value) * Math.sin(angleSlice*i - Math.PI/2); })
+		.style("fill", function(d,i,j) { return cfg.color(j); })
+		.style("fill-opacity", 0.8);
+
+	/////////////////////////////////////////////////////////
+	//////// Append invisible circles for tooltip ///////////
+	/////////////////////////////////////////////////////////
+	
+	//Wrapper for the invisible circles on top
+	var blobCircleWrapper = g.selectAll(".radarCircleWrapper")
+		.data(data)
+		.enter().append("g")
+		.attr("class", "radarCircleWrapper");
+		
+	//Append a set of invisible circles on top for the mouseover pop-up
+	blobCircleWrapper.selectAll(".radarInvisibleCircle")
+		.data(function(d,i) { return d; })
+		.enter().append("circle")
+		.attr("class", "radarInvisibleCircle")
+		.attr("r", cfg.dotRadius*1.5)
+		.attr("cx", function(d,i){ return rScale(d.value) * Math.cos(angleSlice*i - Math.PI/2); })
+		.attr("cy", function(d,i){ return rScale(d.value) * Math.sin(angleSlice*i - Math.PI/2); })
+		.style("fill", "none")
+		.style("pointer-events", "all")
+		.on("mouseover", function(d,i) {
+			newX =  parseFloat(d3.select(this).attr('cx')) - 10;
+			newY =  parseFloat(d3.select(this).attr('cy')) - 10;
+					
+			tooltip
+				.attr('x', newX)
+				.attr('y', newY)
+				.text(Format(d.value))
+				.transition().duration(200)
+				.style('opacity', 1);
+		})
+		.on("mouseout", function(){
+			tooltip.transition().duration(200)
+				.style("opacity", 0);
+		});
+		
+	//Set up the small tooltip for when you hover over a circle
+	var tooltip = g.append("text")
+		.attr("class", "tooltip")
+		.style("opacity", 0);
+	
+	/////////////////////////////////////////////////////////
+	/////////////////// Helper Function /////////////////////
+	/////////////////////////////////////////////////////////
+
+	//Taken from http://bl.ocks.org/mbostock/7555321
+	//Wraps SVG text	
+	function wrap(text, width) {
+	  text.each(function() {
+		var text = d3.select(this),
+			words = text.text().split(/\s+/).reverse(),
+			word,
+			line = [],
+			lineNumber = 0,
+			lineHeight = 1.4, // ems
+			y = text.attr("y"),
+			x = text.attr("x"),
+			dy = parseFloat(text.attr("dy")),
+			tspan = text.text(null).append("tspan").attr("x", x).attr("y", y).attr("dy", dy + "em");
+			
+		while (word = words.pop()) {
+		  line.push(word);
+		  tspan.text(line.join(" "));
+		  if (tspan.node().getComputedTextLength() > width) {
+			line.pop();
+			tspan.text(line.join(" "));
+			line = [word];
+			tspan = text.append("tspan").attr("x", x).attr("y", y).attr("dy", ++lineNumber * lineHeight + dy + "em").text(word);
+		  }
+		}
+	  });
+	}//wrap	
+	
+}//RadarChart
\ No newline at end of file
